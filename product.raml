#%RAML 0.8
title: YaasApiProductV2
version: v2
mediaType: application/json
baseUri: https://api.yaas.io/hybris/product/v2
securitySchemes:
 - !include https://api.yaas.io/patterns/v1/security-schema-basic.yaml
schemas:
  - errorMessage: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "error",
          "description": "Schema for API specified errors.",
          "type": "object",
          "properties": {
              "status": {
                  "type": "integer",
                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                  "minimum": 100,
                  "maximum": 599
              },
              "type": {
                  "type": "string",
                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                  "pattern": "[a-z]+[a-z_]*[a-z]+"
              },
              "message": {
                  "type": "string",
                  "description": "descriptive error message for debugging"
              },
              "moreInfo": {
                  "type": "string",
                  "format": "uri",
                  "description": "link to documentation to investigate further and finding support"
              },
              "details": {
                  "type": "array",
                  "description": "list of problems causing this error",
                  "items": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "errorDetail",
                      "description": "schema for specific error cause",
                      "type": "object",
                      "properties": {
                          "field": {
                              "type": "string",
                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error detail message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support for error detail"
                          }
                      },
                      "required": [
                          "type"
                      ]
                  }
              }
          },
          "required": [
              "status",
              "type"
          ]
      }
  - YRN: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "YRN attribute",
          "type": "string",
          "format": "uri",
          "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
      }
  - mediaMetadata: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "description": "Media file metadata",
          "properties": {
              "id": {
                  "type": "string"
              },
              "yrn": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "YRN attribute",
                  "type": "string",
                  "format": "uri",
                  "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
              },
              "createdAt": {
                  "type": "string",
                  "description": "ISO 8601 format date in which the media metadata was created."
              },
              "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL of file content"
              },
              "tags": {
                  "type": "array",
                  "items": {
                      "type": "string"
                  },
                  "description": "Media file tags"
              },
              "contentType": {
                  "type": "string",
                  "description": "MIME type of the media file",
                  "example": "image/jpeg"
              },
              "uploadLink": {
                  "type": "string",
                  "description": "Link on which user should upload (PUT) media file."
              },
              "uncommittedMedia": {
                  "type": "boolean",
                  "description": "If true, the media file is not committed yet. If property is set to false or is not present the media is already committed"
              },
              "customAttributes": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "Map of custom attributes. The map key is a string, the value can be any JSON object"
              }
          },
          "additionalProperties": false
      }
  - mediaMetadataCollection: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "array",
          "items": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "description": "Media file metadata",
              "properties": {
                  "id": {
                      "type": "string"
                  },
                  "yrn": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "YRN attribute",
                      "type": "string",
                      "format": "uri",
                      "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                  },
                  "createdAt": {
                      "type": "string",
                      "description": "ISO 8601 format date in which the media metadata was created."
                  },
                  "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "URL of file content"
                  },
                  "tags": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      },
                      "description": "Media file tags"
                  },
                  "contentType": {
                      "type": "string",
                      "description": "MIME type of the media file",
                      "example": "image/jpeg"
                  },
                  "uploadLink": {
                      "type": "string",
                      "description": "Link on which user should upload (PUT) media file."
                  },
                  "uncommittedMedia": {
                      "type": "boolean",
                      "description": "If true, the media file is not committed yet. If property is set to false or is not present the media is already committed"
                  },
                  "customAttributes": {
                      "type": "object",
                      "additionalProperties": true,
                      "description": "Map of custom attributes. The map key is a string, the value can be any JSON object"
                  }
              },
              "additionalProperties": false
          }
      }
  - mediaMetadataCreation: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "description": "Media file metadata",
          "properties": {
              "tags": {
                  "type": "array",
                  "items": {
                      "type": "string"
                  },
                  "description": "Media file tags"
              },
              "position": {
                  "type": "integer",
                  "default": 0,
                  "description": "Media order is set based on position property. Position is indexed from 0. If value is <= 0 the media is ordered as first. If value is higher that media count or is not specified the media is ordered as last. When retrieving product media they are ordered, but position property is not returned as it is not persisted"
              },
              "contentType": {
                  "type": "string",
                  "description": "MIME type of the file. The provided content type should be the same as the Content-Type header provided during media update, otherwise the update will fail"
              },
              "customAttributes": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "Map of custom attributes. The map key should be a string, the value can be any JSON object"
              }
          },
          "additionalProperties": false,
          "required": [
              "contentType"
          ]
      }
  - mediaMetadataUpdate: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "description": "Schema to update media file metadata",
          "properties": {
              "tags": {
                  "type": "array",
                  "items": {
                      "type": "string"
                  },
                  "description": "Media file tags"
              },
              "position": {
                  "type": "integer",
                  "default": 0,
                  "description": "Media order is set based on position property. Position is indexed from 0. If value is <= 0 the media is ordered as first. If value is higher that media count or is not specified the media is ordered as last. When retrieving product media they are ordered, but position property value is not returned as it is not persisted"
              },
              "customAttributes": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "Map of custom attributes. The map key should be a string, the value can be any JSON object"
              }
          },
          "additionalProperties": false
      }
  - productCreation: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "metadata": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                      "mixins": {
                          "type": "object",
                          "additionalProperties": {
                              "type": "string",
                              "format": "uri"
                          }
                      },
                      "variants": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                              "options": {
                                  "type": "object",
                                  "additionalProperties": {
                                      "type": "string",
                                      "format": "uri"
                                  }
                              }
                          }
                      }
                  }
              },
              "id": {
                  "type": "string",
                  "description": "Unique identifier"
              },
              "code": {
                  "type": [
                      "string"
                  ],
                  "description": "Unique, mandatory user-defined identifier of a product",
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
              },
              "name": {
                  "description": "The name of the product.",
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "localized",
                  "oneOf": [
                      {
                          "type": "string",
                          "minLength": 1,
                          "description": "value of property in default language"
                      },
                      {
                          "type": "object",
                          "description": "value of property in specific language",
                          "additionalProperties": {
                              "type": "string",
                              "minLength": 1
                          }
                      }
                  ]
              },
              "description": {
                  "description": "The description of the product.",
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "localized",
                  "oneOf": [
                      {
                          "type": "string",
                          "description": "value of property in default language"
                      },
                      {
                          "type": "object",
                          "description": "value of property in specific language",
                          "additionalProperties": {
                              "type": "string"
                          }
                      },
                      {
                          "type": "null"
                      }
                  ]
              },
              "published": {
                  "type": "boolean",
                  "default": false,
                  "description": "This flag determines if product is live."
              },
              "mixins": {
                  "type": "object"
              }
          },
          "additionalProperties": false,
          "required": [
              "name",
              "code"
          ]
      }
  - productUpdate: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "metadata": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                      "mixins": {
                          "type": "object",
                          "additionalProperties": {
                              "type": "string",
                              "format": "uri"
                          }
                      },
                      "variants": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                              "options": {
                                  "type": "object",
                                  "additionalProperties": {
                                      "type": "string",
                                      "format": "uri"
                                  }
                              }
                          }
                      }
                  }
              },
              "code": {
                  "type": [
                      "string"
                  ],
                  "description": "Unique, mandatory user-defined identifier of a product",
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
              },
              "name": {
                  "description": "The name of the product.",
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "localized",
                  "oneOf": [
                      {
                          "type": "string",
                          "minLength": 1,
                          "description": "value of property in default language"
                      },
                      {
                          "type": "object",
                          "description": "value of property in specific language",
                          "additionalProperties": {
                              "type": "string",
                              "minLength": 1
                          }
                      }
                  ]
              },
              "description": {
                  "description": "The description of the product.",
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "localized",
                  "oneOf": [
                      {
                          "type": "string",
                          "description": "value of property in default language"
                      },
                      {
                          "type": "object",
                          "description": "value of property in specific language",
                          "additionalProperties": {
                              "type": "string"
                          }
                      },
                      {
                          "type": "null"
                      }
                  ]
              },
              "published": {
                  "type": "boolean",
                  "default": false,
                  "description": "This flag determines if product is live."
              },
              "mixins": {
                  "type": "object"
              }
          },
          "additionalProperties": false,
          "required": [
              "name",
              "code"
          ]
      }
  - product: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "metadata": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                      "mixins": {
                          "type": "object",
                          "additionalProperties": {
                              "type": "string",
                              "format": "uri"
                          }
                      },
                      "variants": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                              "options": {
                                  "type": "object",
                                  "additionalProperties": {
                                      "type": "string",
                                      "format": "uri"
                                  }
                              },
                              "mixins": {
                                  "type": "object",
                                  "additionalProperties": {
                                      "type": "string",
                                      "format": "uri"
                                  }
                              }
                          }
                      },
                      "version": {
                          "type": "number"
                      },
                      "createdAt": {
                          "type": "string",
                          "description": "ISO 8601 format date in which the product was created."
                      },
                      "modifiedAt": {
                          "type": "string",
                          "description": "ISO 8601 format date in which the product was modified."
                      }
                  }
              },
              "id": {
                  "type": "string",
                  "description": "Unique identifier"
              },
              "yrn": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "YRN attribute",
                  "type": "string",
                  "format": "uri",
                  "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
              },
              "code": {
                  "type": [
                      "string"
                  ],
                  "description": "Unique, mandatory user-defined identifier of a product",
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
              },
              "name": {
                  "description": "The name of the product.",
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "localized",
                  "oneOf": [
                      {
                          "type": "string",
                          "minLength": 1,
                          "description": "value of property in default language"
                      },
                      {
                          "type": "object",
                          "description": "value of property in specific language",
                          "additionalProperties": {
                              "type": "string",
                              "minLength": 1
                          }
                      }
                  ]
              },
              "description": {
                  "description": "The description of the product.",
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "localized",
                  "oneOf": [
                      {
                          "type": "string",
                          "description": "value of property in default language"
                      },
                      {
                          "type": "object",
                          "description": "value of property in specific language",
                          "additionalProperties": {
                              "type": "string"
                          }
                      },
                      {
                          "type": "null"
                      }
                  ]
              },
              "published": {
                  "type": "boolean",
                  "default": false,
                  "description": "This flag determines if product is live."
              },
              "media": {
                  "type": "array",
                  "items": {
                      "type": "object",
                      "description": "Media file metadata",
                      "properties": {
                          "id": {
                              "type": "string"
                          },
                          "yrn": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "YRN attribute",
                              "type": "string",
                              "format": "uri",
                              "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                          },
                          "mediaId": {
                              "type": "string"
                          },
                          "url": {
                              "type": "string",
                              "format": "uri",
                              "description": "URL of file content"
                          },
                          "tags": {
                              "type": "array",
                              "items": {
                                  "type": "string"
                              },
                              "description": "Media file tags"
                          },
                          "contentType": {
                              "type": "string",
                              "description": "MIME type of the media file"
                          },
                          "stored": {
                              "type": "boolean",
                              "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                          },
                          "createdAt": {
                              "type": "string",
                              "description": "Date of media metadata creation."
                          },
                          "commitLink": {
                              "type": "string",
                              "description": "Contains link which is used when user triggers media commit operation. This link is not returned to user as product service internally triggers the commit"
                          },
                          "uploadLink": {
                              "type": "string",
                              "description": "Contains link on which user should send media for upload before he triggers the commit operation"
                          },
                          "uncommittedMedia": {
                              "type": "boolean",
                              "description": "If true, the media file is not committed yet. Not committed media does no have url property provided"
                          }
                      },
                      "additionalProperties": false
                  },
                  "description": "Contains media information (including url). This attribute is Read-Only, to manage media collection please use the /media subresource. To get this attribute included in product please add the expand=media query param. By default this attribute is not returned with product."
              },
              "mixins": {
                  "type": "object"
              }
          },
          "additionalProperties": false,
          "required": [
              "id",
              "yrn"
          ]
      }
  - products: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "array",
          "items": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                  "metadata": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                          "mixins": {
                              "type": "object",
                              "additionalProperties": {
                                  "type": "string",
                                  "format": "uri"
                              }
                          },
                          "variants": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                  "options": {
                                      "type": "object",
                                      "additionalProperties": {
                                          "type": "string",
                                          "format": "uri"
                                      }
                                  },
                                  "mixins": {
                                      "type": "object",
                                      "additionalProperties": {
                                          "type": "string",
                                          "format": "uri"
                                      }
                                  }
                              }
                          },
                          "version": {
                              "type": "number"
                          },
                          "createdAt": {
                              "type": "string",
                              "description": "ISO 8601 format date in which the product was created."
                          },
                          "modifiedAt": {
                              "type": "string",
                              "description": "ISO 8601 format date in which the product was modified."
                          }
                      }
                  },
                  "id": {
                      "type": "string",
                      "description": "Unique identifier"
                  },
                  "yrn": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "YRN attribute",
                      "type": "string",
                      "format": "uri",
                      "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                  },
                  "code": {
                      "type": [
                          "string"
                      ],
                      "description": "Unique, mandatory user-defined identifier of a product",
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                  },
                  "name": {
                      "description": "The name of the product.",
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "localized",
                      "oneOf": [
                          {
                              "type": "string",
                              "minLength": 1,
                              "description": "value of property in default language"
                          },
                          {
                              "type": "object",
                              "description": "value of property in specific language",
                              "additionalProperties": {
                                  "type": "string",
                                  "minLength": 1
                              }
                          }
                      ]
                  },
                  "description": {
                      "description": "The description of the product.",
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "localized",
                      "oneOf": [
                          {
                              "type": "string",
                              "description": "value of property in default language"
                          },
                          {
                              "type": "object",
                              "description": "value of property in specific language",
                              "additionalProperties": {
                                  "type": "string"
                              }
                          },
                          {
                              "type": "null"
                          }
                      ]
                  },
                  "published": {
                      "type": "boolean",
                      "default": false,
                      "description": "This flag determines if product is live."
                  },
                  "media": {
                      "type": "array",
                      "items": {
                          "type": "object",
                          "description": "Media file metadata",
                          "properties": {
                              "id": {
                                  "type": "string"
                              },
                              "yrn": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "YRN attribute",
                                  "type": "string",
                                  "format": "uri",
                                  "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                              },
                              "mediaId": {
                                  "type": "string"
                              },
                              "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "URL of file content"
                              },
                              "tags": {
                                  "type": "array",
                                  "items": {
                                      "type": "string"
                                  },
                                  "description": "Media file tags"
                              },
                              "contentType": {
                                  "type": "string",
                                  "description": "MIME type of the media file"
                              },
                              "stored": {
                                  "type": "boolean",
                                  "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                              },
                              "createdAt": {
                                  "type": "string",
                                  "description": "Date of media metadata creation."
                              },
                              "commitLink": {
                                  "type": "string",
                                  "description": "Contains link which is used when user triggers media commit operation. This link is not returned to user as product service internally triggers the commit"
                              },
                              "uploadLink": {
                                  "type": "string",
                                  "description": "Contains link on which user should send media for upload before he triggers the commit operation"
                              },
                              "uncommittedMedia": {
                                  "type": "boolean",
                                  "description": "If true, the media file is not committed yet. Not committed media does no have url property provided"
                              }
                          },
                          "additionalProperties": false
                      },
                      "description": "Contains media information (including url). This attribute is Read-Only, to manage media collection please use the /media subresource. To get this attribute included in product please add the expand=media query param. By default this attribute is not returned with product."
                  },
                  "mixins": {
                      "type": "object"
                  }
              },
              "additionalProperties": false,
              "required": [
                  "id",
                  "yrn"
              ]
          }
      }
  - resourceLocation: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "id": {
                  "type": "string"
              },
              "yrn": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "YRN attribute",
                  "type": "string",
                  "format": "uri",
                  "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
              },
              "link": {
                  "type": "string"
              }
          },
          "required": [
              "id",
              "link",
              "yrn"
          ]
      }
  - mediaLocation: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "id": {
                  "type": "string"
              },
              "yrn": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "YRN attribute",
                  "type": "string",
                  "format": "uri",
                  "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
              },
              "uploadLink": {
                  "type": "string"
              }
          },
          "required": [
              "id",
              "uploadLink",
              "yrn"
          ]
      }
  - tenantAction: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "tenant": {
                  "type": "string"
              },
              "action": {
                  "type": "string"
              }
          },
          "required": [
              "tenant",
              "action"
          ]
      }
  - genericResponse: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "status": {
                  "type": "string"
              },
              "message": {
                  "type": "string"
              },
              "data": {
                  "type": "string"
              }
          },
          "required": [
              "code"
          ]
      }
  - productVariant: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "metadata": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                      "mixins": {
                          "type": "object",
                          "additionalProperties": {
                              "type": "string",
                              "format": "uri"
                          }
                      },
                      "version": {
                          "type": "number"
                      },
                      "createdAt": {
                          "type": "string",
                          "description": "ISO 8601 format date in which the product variant was created."
                      },
                      "modifiedAt": {
                          "type": "string",
                          "description": "ISO 8601 format date in which the product variant was modified."
                      }
                  }
              },
              "id": {
                  "type": "string",
                  "description": "Unique identifier"
              },
              "yrn": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "YRN attribute",
                  "type": "string",
                  "format": "uri",
                  "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
              },
              "code": {
                  "type": [
                      "string"
                  ],
                  "description": "Unique, mandatory user-defined identifier of a product variant",
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
              },
              "name": {
                  "description": "The name of the product variant.",
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "localized",
                  "oneOf": [
                      {
                          "type": "string",
                          "description": "value of property in default language"
                      },
                      {
                          "type": "object",
                          "description": "value of property in specific language",
                          "additionalProperties": {
                              "type": "string"
                          }
                      },
                      {
                          "type": "null"
                      }
                  ]
              },
              "options": {
                  "type": "object"
              },
              "media": {
                  "type": "array",
                  "items": {
                      "type": "object",
                      "description": "Media file metadata",
                      "properties": {
                          "id": {
                              "type": "string"
                          },
                          "yrn": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "YRN attribute",
                              "type": "string",
                              "format": "uri",
                              "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                          },
                          "mediaId": {
                              "type": "string"
                          },
                          "url": {
                              "type": "string",
                              "format": "uri",
                              "description": "URL of file content"
                          },
                          "tags": {
                              "type": "array",
                              "items": {
                                  "type": "string"
                              },
                              "description": "Media file tags"
                          },
                          "contentType": {
                              "type": "string",
                              "description": "MIME type of the media file"
                          },
                          "stored": {
                              "type": "boolean",
                              "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                          },
                          "createdAt": {
                              "type": "string",
                              "description": "Date of media metadata creation."
                          },
                          "commitLink": {
                              "type": "string",
                              "description": "Contains link which is used when user triggers media commit operation. This link is not returned to user as product service internally triggers the commit"
                          },
                          "uploadLink": {
                              "type": "string",
                              "description": "Contains link on which user should send media for upload before he triggers the commit operation"
                          },
                          "uncommittedMedia": {
                              "type": "boolean",
                              "description": "If true, the media file is not committed yet. Not committed media does no have url property provided"
                          }
                      },
                      "additionalProperties": false
                  },
                  "description": "Contains media information (including url). This attribute is Read-Only, to manage media collection please use the /media subresource. To get this attribute included in product please add the expand=media query param. By default this attribute is not returned with product."
              },
              "mixins": {
                  "type": "object"
              },
              "default": {
                  "type": "boolean",
                  "default": false,
                  "description": "This flag determines if variant is a default variant."
              }
          },
          "additionalProperties": false,
          "required": [
              "id",
              "yrn"
          ]
      }
  - productVariantWithProduct: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "productId": {
                  "type": "string",
                  "description": "Product identifier"
              },
              "id": {
                  "type": "string",
                  "description": "Unique identifier"
              },
              "yrn": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "YRN attribute",
                  "type": "string",
                  "format": "uri",
                  "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
              },
              "code": {
                  "type": [
                      "string",
                      "null"
                  ],
                  "description": "Unique, mandatory user-defined identifier of a product variant",
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
              },
              "name": {
                  "description": "The name of the product variant.",
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "localized",
                  "oneOf": [
                      {
                          "type": "string",
                          "description": "value of property in default language"
                      },
                      {
                          "type": "object",
                          "description": "value of property in specific language",
                          "additionalProperties": {
                              "type": "string"
                          }
                      },
                      {
                          "type": "null"
                      }
                  ]
              },
              "options": {
                  "type": "object"
              },
              "default": {
                  "type": "boolean",
                  "default": false,
                  "description": "This flag determines if variant is a default variant."
              },
              "product": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                      "metadata": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                              "mixins": {
                                  "type": "object",
                                  "additionalProperties": {
                                      "type": "string",
                                      "format": "uri"
                                  }
                              },
                              "variants": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "properties": {
                                      "options": {
                                          "type": "object",
                                          "additionalProperties": {
                                              "type": "string",
                                              "format": "uri"
                                          }
                                      },
                                      "mixins": {
                                          "type": "object",
                                          "additionalProperties": {
                                              "type": "string",
                                              "format": "uri"
                                          }
                                      }
                                  }
                              },
                              "version": {
                                  "type": "number"
                              },
                              "createdAt": {
                                  "type": "string",
                                  "description": "ISO 8601 format date in which the product was created."
                              },
                              "modifiedAt": {
                                  "type": "string",
                                  "description": "ISO 8601 format date in which the product was modified."
                              }
                          }
                      },
                      "id": {
                          "type": "string",
                          "description": "Unique identifier"
                      },
                      "yrn": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "YRN attribute",
                          "type": "string",
                          "format": "uri",
                          "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                      },
                      "code": {
                          "type": [
                              "string"
                          ],
                          "description": "Unique, mandatory user-defined identifier of a product",
                          "minLength": 1,
                          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                      },
                      "name": {
                          "description": "The name of the product.",
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "localized",
                          "oneOf": [
                              {
                                  "type": "string",
                                  "minLength": 1,
                                  "description": "value of property in default language"
                              },
                              {
                                  "type": "object",
                                  "description": "value of property in specific language",
                                  "additionalProperties": {
                                      "type": "string",
                                      "minLength": 1
                                  }
                              }
                          ]
                      },
                      "description": {
                          "description": "The description of the product.",
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "localized",
                          "oneOf": [
                              {
                                  "type": "string",
                                  "description": "value of property in default language"
                              },
                              {
                                  "type": "object",
                                  "description": "value of property in specific language",
                                  "additionalProperties": {
                                      "type": "string"
                                  }
                              },
                              {
                                  "type": "null"
                              }
                          ]
                      },
                      "published": {
                          "type": "boolean",
                          "default": false,
                          "description": "This flag determines if product is live."
                      },
                      "media": {
                          "type": "array",
                          "items": {
                              "type": "object",
                              "description": "Media file metadata",
                              "properties": {
                                  "id": {
                                      "type": "string"
                                  },
                                  "yrn": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "YRN attribute",
                                      "type": "string",
                                      "format": "uri",
                                      "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                  },
                                  "mediaId": {
                                      "type": "string"
                                  },
                                  "url": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "URL of file content"
                                  },
                                  "tags": {
                                      "type": "array",
                                      "items": {
                                          "type": "string"
                                      },
                                      "description": "Media file tags"
                                  },
                                  "contentType": {
                                      "type": "string",
                                      "description": "MIME type of the media file"
                                  },
                                  "stored": {
                                      "type": "boolean",
                                      "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                                  },
                                  "createdAt": {
                                      "type": "string",
                                      "description": "Date of media metadata creation."
                                  },
                                  "commitLink": {
                                      "type": "string",
                                      "description": "Contains link which is used when user triggers media commit operation. This link is not returned to user as product service internally triggers the commit"
                                  },
                                  "uploadLink": {
                                      "type": "string",
                                      "description": "Contains link on which user should send media for upload before he triggers the commit operation"
                                  },
                                  "uncommittedMedia": {
                                      "type": "boolean",
                                      "description": "If true, the media file is not committed yet. Not committed media does no have url property provided"
                                  }
                              },
                              "additionalProperties": false
                          },
                          "description": "Contains media information (including url). This attribute is Read-Only, to manage media collection please use the /media subresource. To get this attribute included in product please add the expand=media query param. By default this attribute is not returned with product."
                      },
                      "mixins": {
                          "type": "object"
                      }
                  },
                  "additionalProperties": false,
                  "required": [
                      "id",
                      "yrn"
                  ]
              }
          },
          "additionalProperties": false,
          "required": [
              "id",
              "yrn"
          ]
      }
  - productVariants: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "array",
          "items": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                  "metadata": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                          "mixins": {
                              "type": "object",
                              "additionalProperties": {
                                  "type": "string",
                                  "format": "uri"
                              }
                          },
                          "version": {
                              "type": "number"
                          },
                          "createdAt": {
                              "type": "string",
                              "description": "ISO 8601 format date in which the product variant was created."
                          },
                          "modifiedAt": {
                              "type": "string",
                              "description": "ISO 8601 format date in which the product variant was modified."
                          }
                      }
                  },
                  "id": {
                      "type": "string",
                      "description": "Unique identifier"
                  },
                  "yrn": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "YRN attribute",
                      "type": "string",
                      "format": "uri",
                      "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                  },
                  "code": {
                      "type": [
                          "string"
                      ],
                      "description": "Unique, mandatory user-defined identifier of a product variant",
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                  },
                  "name": {
                      "description": "The name of the product variant.",
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "localized",
                      "oneOf": [
                          {
                              "type": "string",
                              "description": "value of property in default language"
                          },
                          {
                              "type": "object",
                              "description": "value of property in specific language",
                              "additionalProperties": {
                                  "type": "string"
                              }
                          },
                          {
                              "type": "null"
                          }
                      ]
                  },
                  "options": {
                      "type": "object"
                  },
                  "media": {
                      "type": "array",
                      "items": {
                          "type": "object",
                          "description": "Media file metadata",
                          "properties": {
                              "id": {
                                  "type": "string"
                              },
                              "yrn": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "YRN attribute",
                                  "type": "string",
                                  "format": "uri",
                                  "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                              },
                              "mediaId": {
                                  "type": "string"
                              },
                              "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "URL of file content"
                              },
                              "tags": {
                                  "type": "array",
                                  "items": {
                                      "type": "string"
                                  },
                                  "description": "Media file tags"
                              },
                              "contentType": {
                                  "type": "string",
                                  "description": "MIME type of the media file"
                              },
                              "stored": {
                                  "type": "boolean",
                                  "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                              },
                              "createdAt": {
                                  "type": "string",
                                  "description": "Date of media metadata creation."
                              },
                              "commitLink": {
                                  "type": "string",
                                  "description": "Contains link which is used when user triggers media commit operation. This link is not returned to user as product service internally triggers the commit"
                              },
                              "uploadLink": {
                                  "type": "string",
                                  "description": "Contains link on which user should send media for upload before he triggers the commit operation"
                              },
                              "uncommittedMedia": {
                                  "type": "boolean",
                                  "description": "If true, the media file is not committed yet. Not committed media does no have url property provided"
                              }
                          },
                          "additionalProperties": false
                      },
                      "description": "Contains media information (including url). This attribute is Read-Only, to manage media collection please use the /media subresource. To get this attribute included in product please add the expand=media query param. By default this attribute is not returned with product."
                  },
                  "mixins": {
                      "type": "object"
                  },
                  "default": {
                      "type": "boolean",
                      "default": false,
                      "description": "This flag determines if variant is a default variant."
                  }
              },
              "additionalProperties": false,
              "required": [
                  "id",
                  "yrn"
              ]
          }
      }
  - productVariantCreation: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "code": {
                  "type": [
                      "string"
                  ],
                  "description": "Unique, mandatory user-defined identifier of a product variant",
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
              },
              "name": {
                  "description": "The name of the product variant.",
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "localized",
                  "oneOf": [
                      {
                          "type": "string",
                          "description": "value of property in default language"
                      },
                      {
                          "type": "object",
                          "description": "value of property in specific language",
                          "additionalProperties": {
                              "type": "string"
                          }
                      },
                      {
                          "type": "null"
                      }
                  ]
              },
              "options": {
                  "type": "object"
              },
              "default": {
                  "type": "boolean",
                  "default": false,
                  "description": "This flag determines if variant is a default variant."
              }
          },
          "additionalProperties": false,
          "required": [
              "code"
          ]
      }
  - productVariantUpdate: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "code": {
                  "type": [
                      "string"
                  ],
                  "description": "Unique, mandatory user-defined identifier of a product variant",
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
              },
              "name": {
                  "description": "The name of the product variant.",
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "localized",
                  "oneOf": [
                      {
                          "type": "string",
                          "description": "value of property in default language"
                      },
                      {
                          "type": "object",
                          "description": "value of property in specific language",
                          "additionalProperties": {
                              "type": "string"
                          }
                      },
                      {
                          "type": "null"
                      }
                  ]
              },
              "options": {
                  "type": "object"
              },
              "default": {
                  "type": "boolean",
                  "default": false,
                  "description": "This flag determines if variant is a default variant."
              }
          },
          "additionalProperties": false,
          "required": [
              "code"
          ]
      }
  - searchQuery: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "yrns": {
                  "type": "array",
                  "description": "List of yrns. Each yrn identifies either product or product variant",
                  "items": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "YRN attribute",
                      "type": "string",
                      "format": "uri",
                      "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                  }
              },
              "params": {
                  "type": "object",
                  "description": "Optional query params",
                  "properties": {
                      "product": {
                          "type": "object",
                          "description": "Optional query params for products",
                          "properties": {
                              "fields": {
                                  "type": "string",
                                  "description": "Optional projection for product"
                              }
                          }
                      },
                      "variant": {
                          "type": "object",
                          "description": "Optional query params for product variant",
                          "properties": {
                              "fields": {
                                  "type": "string",
                                  "description": "Optional projection for product variant"
                              },
                              "expand": {
                                  "enum": [
                                      "product"
                                  ],
                                  "description": "Optional expand option for product variants"
                              }
                          }
                      }
                  }
              }
          },
          "additionalProperties": false,
          "required": [
              "yrns"
          ]
      }
  - searchQueryResult: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "array",
          "items": {
              "oneOf": [
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                          "productId": {
                              "type": "string",
                              "description": "Product identifier"
                          },
                          "id": {
                              "type": "string",
                              "description": "Unique identifier"
                          },
                          "yrn": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "YRN attribute",
                              "type": "string",
                              "format": "uri",
                              "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                          },
                          "code": {
                              "type": [
                                  "string",
                                  "null"
                              ],
                              "description": "Unique, mandatory user-defined identifier of a product variant",
                              "minLength": 1,
                              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                          },
                          "name": {
                              "description": "The name of the product variant.",
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "localized",
                              "oneOf": [
                                  {
                                      "type": "string",
                                      "description": "value of property in default language"
                                  },
                                  {
                                      "type": "object",
                                      "description": "value of property in specific language",
                                      "additionalProperties": {
                                          "type": "string"
                                      }
                                  },
                                  {
                                      "type": "null"
                                  }
                              ]
                          },
                          "options": {
                              "type": "object"
                          },
                          "default": {
                              "type": "boolean",
                              "default": false,
                              "description": "This flag determines if variant is a default variant."
                          },
                          "product": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "type": "object",
                              "properties": {
                                  "metadata": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "properties": {
                                          "mixins": {
                                              "type": "object",
                                              "additionalProperties": {
                                                  "type": "string",
                                                  "format": "uri"
                                              }
                                          },
                                          "variants": {
                                              "type": "object",
                                              "additionalProperties": false,
                                              "properties": {
                                                  "options": {
                                                      "type": "object",
                                                      "additionalProperties": {
       
                                                   "type": "string",
                                                          "format": "uri"
                                                      }
                                                  },
                                                  "mixins": {
                                                      "type": "object",
                                                      "additionalProperties": {
       
                                                   "type": "string",
                                                          "format": "uri"
                                                      }
                                                  }
                                              }
                                          },
                                          "version": {
                                              "type": "number"
                                          },
                                          "createdAt": {
                                              "type": "string",
                                              "description": "ISO 8601 format date in which the product was created."
                                          },
                                          "modifiedAt": {
                                              "type": "string",
                                              "description": "ISO 8601 format date in which the product was modified."
                                          }
                                      }
                                  },
                                  "id": {
                                      "type": "string",
                                      "description": "Unique identifier"
                                  },
                                  "yrn": {
                                      "$ref": "YRN"
                                  },
                                  "code": {
                                      "type": [
                                          "string"
                                      ],
                                      "description": "Unique, mandatory user-defined identifier of a product",
                                      "minLength": 1,
                                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                                  },
                                  "name": {
                                      "$ref": "notEmptyLocalizedAttribute",
                                      "description": "The name of the product."
                                  },
                                  "description": {
                                      "$ref": "nullableLocalizedAttribute",
                                      "description": "The description of the product."
                                  },
                                  "published": {
                                      "type": "boolean",
                                      "default": false,
                                      "description": "This flag determines if product is live."
                                  },
                                  "media": {
                                      "type": "array",
                                      "items": {
                                          "type": "object",
                                          "description": "Media file metadata",
                                          "properties": {
                                              "id": {
                                                  "type": "string"
                                              },
                                              "yrn": {
                                                  "$ref": "YRN"
                                              },
                                              "mediaId": {
                                                  "type": "string"
                                              },
                                              "url": {
                                                  "type": "string",
                                                  "format": "uri",
                                                  "description": "URL of file content"
                                              },
                                              "tags": {
                                                  "type": "array",
                                                  "items": {
   
                                                   "type": "string"
                                                  },
                                                  "description": "Media file tags"
                                              },
                                              "contentType": {
                                                  "type": "string",
                                                  "description": "MIME type of the media file"
                                              },
                                              "stored": {
                                                  "type": "boolean",
                                                  "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                                              },
                                              "createdAt": {
                                                  "type": "string",
                                                  "description": "Date of media metadata creation."
                                              },
                                              "commitLink": {
                                                  "type": "string",
                                                  "description": "Contains link which is used when user triggers media commit operation. This link is not returned to user as product service internally triggers the commit"
                                              },
                                              "uploadLink": {
                                                  "type": "string",
                                                  "description": "Contains link on which user should send media for upload before he triggers the commit operation"
                                              },
                                              "uncommittedMedia": {
                                                  "type": "boolean",
                                                  "description": "If true, the media file is not committed yet. Not committed media does no have url property provided"
                                              }
                                          },
                                          "additionalProperties": false
                                      },
                                      "description": "Contains media information (including url). This attribute is Read-Only, to manage media collection please use the /media subresource. To get this attribute included in product please add the expand=media query param. By default this attribute is not returned with product."
                                  },
                                  "mixins": {
                                      "type": "object"
                                  }
                              },
                              "additionalProperties": false,
                              "required": [
                                  "id",
                                  "yrn"
                              ]
                          }
                      },
                      "additionalProperties": false,
                      "required": [
                          "id",
                          "yrn"
                      ]
                  },
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                          "metadata": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                  "mixins": {
                                      "type": "object",
                                      "additionalProperties": {
                                          "type": "string",
                                          "format": "uri"
                                      }
                                  },
                                  "variants": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "properties": {
                                          "options": {
                                              "type": "object",
                                              "additionalProperties": {
                                                  "type": "string",
                                                  "format": "uri"
                                              }
                                          },
                                          "mixins": {
                                              "type": "object",
                                              "additionalProperties": {
                                                  "type": "string",
                                                  "format": "uri"
                                              }
                                          }
                                      }
                                  },
                                  "version": {
                                      "type": "number"
                                  },
                                  "createdAt": {
                                      "type": "string",
                                      "description": "ISO 8601 format date in which the product was created."
                                  },
                                  "modifiedAt": {
                                      "type": "string",
                                      "description": "ISO 8601 format date in which the product was modified."
                                  }
                              }
                          },
                          "id": {
                              "type": "string",
                              "description": "Unique identifier"
                          },
                          "yrn": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "YRN attribute",
                              "type": "string",
                              "format": "uri",
                              "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                          },
                          "code": {
                              "type": [
                                  "string"
                              ],
                              "description": "Unique, mandatory user-defined identifier of a product",
                              "minLength": 1,
                              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                          },
                          "name": {
                              "description": "The name of the product.",
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "localized",
                              "oneOf": [
                                  {
                                      "type": "string",
                                      "minLength": 1,
                                      "description": "value of property in default language"
                                  },
                                  {
                                      "type": "object",
                                      "description": "value of property in specific language",
                                      "additionalProperties": {
                                          "type": "string",
                                          "minLength": 1
                                      }
                                  }
                              ]
                          },
                          "description": {
                              "description": "The description of the product.",
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "localized",
                              "oneOf": [
                                  {
                                      "type": "string",
                                      "description": "value of property in default language"
                                  },
                                  {
                                      "type": "object",
                                      "description": "value of property in specific language",
                                      "additionalProperties": {
                                          "type": "string"
                                      }
                                  },
                                  {
                                      "type": "null"
                                  }
                              ]
                          },
                          "published": {
                              "type": "boolean",
                              "default": false,
                              "description": "This flag determines if product is live."
                          },
                          "media": {
                              "type": "array",
                              "items": {
                                  "type": "object",
                                  "description": "Media file metadata",
                                  "properties": {
                                      "id": {
                                          "type": "string"
                                      },
                                      "yrn": {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "title": "YRN attribute",
                                          "type": "string",
                                          "format": "uri",
                                          "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                      },
                                      "mediaId": {
                                          "type": "string"
                                      },
                                      "url": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "URL of file content"
                                      },
                                      "tags": {
                                          "type": "array",
                                          "items": {
                                              "type": "string"
                                          },
                                          "description": "Media file tags"
                                      },
                                      "contentType": {
                                          "type": "string",
                                          "description": "MIME type of the media file"
                                      },
                                      "stored": {
                                          "type": "boolean",
                                          "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                                      },
                                      "createdAt": {
                                          "type": "string",
                                          "description": "Date of media metadata creation."
                                      },
                                      "commitLink": {
                                          "type": "string",
                                          "description": "Contains link which is used when user triggers media commit operation. This link is not returned to user as product service internally triggers the commit"
                                      },
                                      "uploadLink": {
                                          "type": "string",
                                          "description": "Contains link on which user should send media for upload before he triggers the commit operation"
                                      },
                                      "uncommittedMedia": {
                                          "type": "boolean",
                                          "description": "If true, the media file is not committed yet. Not committed media does no have url property provided"
                                      }
                                  },
                                  "additionalProperties": false
                              },
                              "description": "Contains media information (including url). This attribute is Read-Only, to manage media collection please use the /media subresource. To get this attribute included in product please add the expand=media query param. By default this attribute is not returned with product."
                          },
                          "mixins": {
                              "type": "object"
                          }
                      },
                      "additionalProperties": false,
                      "required": [
                          "id",
                          "yrn"
                      ]
                  }
              ]
          }
      }
  - notEmptyLocalizedAttribute: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "localized",
          "oneOf": [
              {
                  "type": "string",
                  "minLength": 1,
                  "description": "value of property in default language"
              },
              {
                  "type": "object",
                  "description": "value of property in specific language",
                  "additionalProperties": {
                      "type": "string",
                      "minLength": 1
                  }
              }
          ]
      }
  - nullableLocalizedAttribute: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "localized",
          "oneOf": [
              {
                  "type": "string",
                  "description": "value of property in default language"
              },
              {
                  "type": "object",
                  "description": "value of property in specific language",
                  "additionalProperties": {
                      "type": "string"
                  }
              },
              {
                  "type": "null"
              }
          ]
      }
traits:
  - localizedModification:
      usage: Apply this trait when you want to modify localized attributes.
      description: |
        This trait provides localization headers for modifying localized attributes.

      headers:
        Content-Language:
          type: string
          description: |
            The locale identifier of the language of the updated attribute.

          example: pl
          required: false
      responses:
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "Content-Language",
                            "message": "not a language",
                            "type": "invalid_header"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
  - localizedRetrieval:
      usage: Apply this trait when you want to retrieve localized attributes.
      description: |
        This trait provides localization headers for retrieving localized attributes.

      headers:
        Accept-Language:
          type: string
          description: |
            The value of the locale identifier of the language in which the attribute should be returned.
            Provide several values separated by comma, in order to specify fallback languages.

          example: pl
          repeat: true
          required: false
        hybris-languages:
          type: string
          description: |
            Comma separated list of language identifiers for which the localization for an attribute
            should be provided.

          example: en,pl,it
          repeat: true
          required: false
      responses:
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "Accept-Language",
                            "message": "not a language",
                            "type": "invalid_header"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
  - paged:
      usage: |
        Apply this trait to a method returning a list of entities which should be paged.
      description: |
        This trait adds query parameters to the request so that the result can be paginated on the server side.
        The specified parameters are page number and page size.

      queryParameters:
        pageNumber:
          type: integer
          description: |
            The page number to be retrieved where the size of the pages must be specified by the pageSize parameter.
            The number of the first page is 1.

          minimum: 1
          example: 1
          default: 1
          required: false
        pageSize:
          type: integer
          description: |
            The number of documents being retrieved on the page.

          minimum: 1
          example: 16
          default: 16
          required: false
      responses:
        200:
          description: |
            Request was successful.

          headers:
            Link:
              description: |
                Link to the current page, the next page and the previous page. Marked accordingly with *rel* **self**, *rel* **next** and *rel* **prev**. The syntax must be conform to [RFC-5988](https://tools.ietf.org/html/rfc5988).
                The link to the current page (**self**) is required and must be provided always.
                The link to the next page (**next**) is optional. If not present, the next page is not available, as the current page is the last page of the result.
                The link to the previous page (**prev**) is optional. If not present, the previous page is not available, as the current page is the first page of the result.

              example: |
                '<http://sample.com?pageNumber=2&pageSize=10>; rel="self", <http://sample.com?pageNumber=3&pageSize=10>; rel="next"'
              required: true
              repeat: true
              type: string
              displayName: Link
        400:
          description: |
            Request was syntactically incorrect. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "pageNumber",
                            "message": "must be a positive number",
                            "type": "invalid_query_parameter"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
  - sortable:
      usage: |
        Apply this to any method that support sorted results.

      queryParameters:
        sort:
          type: string
          description: |
            The list of comma-separated properties used to sort the results.
            By default, the column values are sorted in ascending order.
            Can either be in the form of fieldName or fieldName:asc,fieldName:desc.
            If you want to sort by localized attributes, you must use the following form:
            fieldName.language or fieldName.language:asc,fieldName.language:desc.

          example: |
            size,species:asc,weight:desc

          required: false
  - queryable:
      usage: |
        Apply this trait to a method returning a list of entities which should be queried.
      description: |
        This trait adds query parameters to the request so that the result can be queried and limited.

      queryParameters:
        q:
          type: string
          description: |
            The simple query criteria based on available fields to limit returned results or a set of modified documents.

          example: |
            species:dog name:"Clifford"

          required: false
      responses:
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "q",
                            "message": "not a valid query",
                            "type": "invalid_query_parameter"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
  - oauth2:
      usage: Apply this trait to support OAuth 2.0 authentication.
      description: |
        Supports OAuth 2.0 for authenticating all API requests.

      headers:
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      responses:
        401:
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
  - restricted:
      usage: |
        Apply this trait to methods being protected in some way so that a call might
        be rejected in cause of lacking permissions

      description: |
        Indicates that a method is restricted and that it might return a 403 response

      responses:
        403:
          description: |
            Access forbidden. The caller is not allowed to access this resource.
          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Not allowed to access this resource",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
  - projectable:
      usage: |
        Apply this trait to a method or resource where you want to limit number of fields returned.
      description: |
        This trait adds "fields" query parameter to the request so that the the result fields can be
        filtered on the server side.

      queryParameters:
        fields:
          type: string
          description: |
            Contains a comma separated list of field identifiers, by which the fields of the response entities should be filtered by.
            Empty or not initialized value result in a minimal set of entity fields returned. Non-existing or invalid fields will be ignored.

          example: code,name,description
/{tenant}/products:
  uriParameters:
    tenant:
      type: string
      required: true
  get:
    is: [ localizedRetrieval, paged, sortable, queryable, oauth2, projectable ]
    description: |
      Get all products.

      Accepted scopes:

        * `hybris.product_read_unpublished` - required to retrieve non-public products. If not provided only published products are returned

    headers:
      Authorization:
        type: string
        description: |
          Used to send a valid OAuth2 access token.

        example: Bearer access_token
        required: true
      Accept-Language:
        type: string
        description: |
          The value of the locale identifier of the language in which the attribute should be returned.
          Provide several values separated by comma, in order to specify fallback languages.

        example: pl
        repeat: true
        required: false
      hybris-languages:
        type: string
        description: |
          Comma separated list of language identifiers for which the localization for an attribute
          should be provided.

        example: en,pl,it
        default: false
        repeat: true
        required: false
    queryParameters:
      fields:
        type: string
        description: |
          Contains a comma separated list of field identifiers, by which the fields of the response entities should be filtered by.
          Empty or not initialized value result in a minimal set of entity fields returned. Non-existing or invalid fields will be ignored.

        example: code,name,description
      q:
        type: string
        description: |
          The simple query criteria based on available fields to limit returned results or a set of modified documents.

        example: |
          species:dog name:"Clifford"

        required: false
      sort:
        type: string
        description: |
          The list of comma-separated properties used to sort the results.
          By default, the column values are sorted in ascending order.
          Can either be in the form of fieldName or fieldName:asc,fieldName:desc.
          If you want to sort by localized attributes, you must use the following form:
          fieldName.language or fieldName.language:asc,fieldName.language:desc.

        example: |
          size,species:asc,weight:desc

        required: false
      pageNumber:
        type: integer
        description: |
          The page number to be retrieved where the size of the pages must be specified by the pageSize parameter.
          The number of the first page is 1.

        minimum: 1
        example: 1
        default: 1
        required: false
      pageSize:
        type: integer
        description: |
          The number of documents being retrieved on the page.

        minimum: 1
        example: 16
        default: 16
        required: false
    responses:
      200:
        description: |
          Resource successfully retrieved.

        headers:
          Link:
            description: |
              Link to the current page, the next page and the previous page. Marked accordingly with *rel* **self**, *rel* **next** and *rel* **prev**. The syntax must be conform to [RFC-5988](https://tools.ietf.org/html/rfc5988).
              The link to the current page (**self**) is required and must be provided always.
              The link to the next page (**next**) is optional. If not present, the next page is not available, as the current page is the last page of the result.
              The link to the previous page (**prev**) is optional. If not present, the previous page is not available, as the current page is the first page of the result.

            example: |
              '<http://sample.com?pageNumber=2&pageSize=10>; rel="self", <http://sample.com?pageNumber=3&pageSize=10>; rel="next"'
            required: true
            repeat: true
            type: string
            displayName: Link
          hybris-count:
            description: |
              Total count of queried elements.

            type: integer
            example: 100
            displayName: hybris-count
        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "array",
                  "items": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                          "metadata": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                  "mixins": {
                                      "type": "object",
                                      "additionalProperties": {
                                          "type": "string",
                                          "format": "uri"
                                      }
                                  },
                                  "variants": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "properties": {
                                          "options": {
                                              "type": "object",
                                              "additionalProperties": {
                                                  "type": "string",
                                                  "format": "uri"
                                              }
                                          },
                                          "mixins": {
                                              "type": "object",
                                              "additionalProperties": {
                                                  "type": "string",
                                                  "format": "uri"
                                              }
                                          }
                                      }
                                  },
                                  "version": {
                                      "type": "number"
                                  },
                                  "createdAt": {
                                      "type": "string",
                                      "description": "ISO 8601 format date in which the product was created."
                                  },
                                  "modifiedAt": {
                                      "type": "string",
                                      "description": "ISO 8601 format date in which the product was modified."
                                  }
                              }
                          },
                          "id": {
                              "type": "string",
                              "description": "Unique identifier"
                          },
                          "yrn": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "YRN attribute",
                              "type": "string",
                              "format": "uri",
                              "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                          },
                          "code": {
                              "type": [
                                  "string"
                              ],
                              "description": "Unique, mandatory user-defined identifier of a product",
                              "minLength": 1,
                              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                          },
                          "name": {
                              "description": "The name of the product.",
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "localized",
                              "oneOf": [
                                  {
                                      "type": "string",
                                      "minLength": 1,
                                      "description": "value of property in default language"
                                  },
                                  {
                                      "type": "object",
                                      "description": "value of property in specific language",
                                      "additionalProperties": {
                                          "type": "string",
                                          "minLength": 1
                                      }
                                  }
                              ]
                          },
                          "description": {
                              "description": "The description of the product.",
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "localized",
                              "oneOf": [
                                  {
                                      "type": "string",
                                      "description": "value of property in default language"
                                  },
                                  {
                                      "type": "object",
                                      "description": "value of property in specific language",
                                      "additionalProperties": {
                                          "type": "string"
                                      }
                                  },
                                  {
                                      "type": "null"
                                  }
                              ]
                          },
                          "published": {
                              "type": "boolean",
                              "default": false,
                              "description": "This flag determines if product is live."
                          },
                          "media": {
                              "type": "array",
                              "items": {
                                  "type": "object",
                                  "description": "Media file metadata",
                                  "properties": {
                                      "id": {
                                          "type": "string"
                                      },
                                      "yrn": {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "title": "YRN attribute",
                                          "type": "string",
                                          "format": "uri",
                                          "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                      },
                                      "mediaId": {
                                          "type": "string"
                                      },
                                      "url": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "URL of file content"
                                      },
                                      "tags": {
                                          "type": "array",
                                          "items": {
                                              "type": "string"
                                          },
                                          "description": "Media file tags"
                                      },
                                      "contentType": {
                                          "type": "string",
                                          "description": "MIME type of the media file"
                                      },
                                      "stored": {
                                          "type": "boolean",
                                          "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                                      },
                                      "createdAt": {
                                          "type": "string",
                                          "description": "Date of media metadata creation."
                                      },
                                      "commitLink": {
                                          "type": "string",
                                          "description": "Contains link which is used when user triggers media commit operation. This link is not returned to user as product service internally triggers the commit"
                                      },
                                      "uploadLink": {
                                          "type": "string",
                                          "description": "Contains link on which user should send media for upload before he triggers the commit operation"
                                      },
                                      "uncommittedMedia": {
                                          "type": "boolean",
                                          "description": "If true, the media file is not committed yet. Not committed media does no have url property provided"
                                      }
                                  },
                                  "additionalProperties": false
                              },
                              "description": "Contains media information (including url). This attribute is Read-Only, to manage media collection please use the /media subresource. To get this attribute included in product please add the expand=media query param. By default this attribute is not returned with product."
                          },
                          "mixins": {
                              "type": "object"
                          }
                      },
                      "additionalProperties": false,
                      "required": [
                          "id",
                          "yrn"
                      ]
                  }
              }
            example: |
              [
                  {
                      "id": "545b4e3dfaee4c10def3db24",
                      "yrn": "urn:yaas:hybris:product:product:myshop;545b4e3dfaee4c10def3db24",
                      "code": "SmartphoneZonyXperiaZ21415269949943",
                      "name": "Smartphone Zony Yperia X2",
                      "description": "The world's best camera and camcorder in a waterproof smartphone.",
                      "published": false
                  }
              ]
      400:
        description: |
          Request syntactically incorrect. Any details will be provided within the response payload.
        body:
          application/json:
            example: |
              {
                  "status": 400,
                  "message": "There are validation problems, see details section for more information",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "validation_violation",
                  "details": [
                      {
                          "field": "Accept-Language",
                          "message": "not a language",
                          "type": "invalid_header"
                      }
                  ]
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      401:
        description: |
          Given request is unauthorized. Bad or expired token. Reauthenticate
          the user. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                  "status": 401,
                  "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type": "insufficient_credentials",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      403:
        description: |
          Evaluated request scopes in access token are not sufficient and do not match required scopes.

        body:
          application/json:
            example: |
              {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      500:
        description: |
          Some server-side error occurred. Any details will be provided within the response payload.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      503:
        description: |
          Service temporarily unavailable.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
  post:
    is: [ localizedModification, oauth2, restricted ]
    description: |
      Create new product.

      Accepted scopes:

        * `hybris.product_create` - mandatory
        * `hybris.product_publish` - required if product is created as published (by providing published flag true )

    headers:
      Authorization:
        type: string
        description: |
          Used to send a valid OAuth2 access token.

        example: Bearer access_token
        required: true
      Content-Language:
        type: string
        description: |
          Single language code. If provided localized values should be provided as simple Strings, otherwise a 'language code/ value' map is expected for localized values.

        example: pl
        required: false
    body:
      application/json:
        schema: |
          {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                  "metadata": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                          "mixins": {
                              "type": "object",
                              "additionalProperties": {
                                  "type": "string",
                                  "format": "uri"
                              }
                          },
                          "variants": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                  "options": {
                                      "type": "object",
                                      "additionalProperties": {
                                          "type": "string",
                                          "format": "uri"
                                      }
                                  }
                              }
                          }
                      }
                  },
                  "id": {
                      "type": "string",
                      "description": "Unique identifier"
                  },
                  "code": {
                      "type": [
                          "string"
                      ],
                      "description": "Unique, mandatory user-defined identifier of a product",
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                  },
                  "name": {
                      "description": "The name of the product.",
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "localized",
                      "oneOf": [
                          {
                              "type": "string",
                              "minLength": 1,
                              "description": "value of property in default language"
                          },
                          {
                              "type": "object",
                              "description": "value of property in specific language",
                              "additionalProperties": {
                                  "type": "string",
                                  "minLength": 1
                              }
                          }
                      ]
                  },
                  "description": {
                      "description": "The description of the product.",
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "localized",
                      "oneOf": [
                          {
                              "type": "string",
                              "description": "value of property in default language"
                          },
                          {
                              "type": "object",
                              "description": "value of property in specific language",
                              "additionalProperties": {
                                  "type": "string"
                              }
                          },
                          {
                              "type": "null"
                          }
                      ]
                  },
                  "published": {
                      "type": "boolean",
                      "default": false,
                      "description": "This flag determines if product is live."
                  },
                  "mixins": {
                      "type": "object"
                  }
              },
              "additionalProperties": false,
              "required": [
                  "name",
                  "code"
              ]
          }
        example: |
          {
              "name": "Smartphone Zony Yperia X2",
              "code": "SmartphoneZonyYperiaX21415269949943",
              "description": "The world's best camera and camcorder in a waterproof smartphone."
          }
    responses:
      201:
        description: |
          The resource has been successfully created.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                      "id": {
                          "type": "string"
                      },
                      "yrn": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "YRN attribute",
                          "type": "string",
                          "format": "uri",
                          "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                      },
                      "link": {
                          "type": "string"
                      }
                  },
                  "required": [
                      "id",
                      "link",
                      "yrn"
                  ]
              }
        headers:
          Location:
            description: |
              The Location of the new resource which was created by the request.
              The value consists of a single absolute URI.
              example: http://www.hybris.com/items/myItem
              required : true

            displayName: Location
            type: string
      400:
        description: |
          Request syntactically incorrect. Any details will be provided within the response payload.
        body:
          application/json:
            example: |
              {
                  "status": 400,
                  "message": "There are validation problems, see details section for more information",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "validation_violation",
                  "details": [
                      {
                          "field": "Content-Language",
                          "message": "not a language",
                          "type": "invalid_header"
                      }
                  ]
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      401:
        description: |
          Given request is unauthorized. Bad or expired token. Reauthenticate
          the user. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                  "status": 401,
                  "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type": "insufficient_credentials",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      403:
        description: |
          Evaluated request scopes in access token are not sufficient and do not match required scopes.

        body:
          application/json:
            example: |
              {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      404:
        description: |
          The requested resource does not exist.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      409:
        description: |
          Product with given code already exists.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      500:
        description: |
          Some server-side error occurred. Any details will be provided within the response payload.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      503:
        description: |
          Service temporarily unavailable.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
  delete:
    is: [ oauth2, restricted ]
    description: |
      Delete all Product entities.

      Accepted scopes:

      * `hybris.product_delete_all` - mandatory

    headers:
      Authorization:
        type: string
        description: |
          Used to send a valid OAuth2 access token.

        example: Bearer access_token
        required: true
    responses:
      204:
        description: |
          All products have been successfully deleted.

      401:
        description: |
          Given request is unauthorized. Bad or expired token. Reauthenticate
          the user. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                  "status": 401,
                  "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type": "insufficient_credentials",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      403:
        description: |
          Evaluated request scopes in access token are not sufficient and do not match required scopes.

        body:
          application/json:
            example: |
              {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      500:
        description: |
          Some server-side error occurred. Any details will be provided within the response payload.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      503:
        description: |
          Service temporarily unavailable.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
  /{productId}:
    uriParameters:
      productId:
        type: string
        required: true
    get:
      is: [ localizedRetrieval, oauth2, restricted, projectable ]
      description: |
        Retrieves a single product.

        YRN: `urn:yaas:hybris:product:product:{tenant};{productId}`

        Accepted scopes:

        * `hybris.product_read_unpublished` - required to retrieve non-public product

      headers:
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
        Accept-Language:
          type: string
          description: |
            The value of the locale identifier of the language in which the attribute should be returned.
            Provide several values separated by comma, in order to specify fallback languages.

          example: pl
          repeat: true
          required: false
        hybris-languages:
          type: string
          description: |
            Comma separated list of language identifiers for which the localization for an attribute
            should be provided.

          example: en,pl,it
          repeat: true
          required: false
      queryParameters:
        fields:
          type: string
          description: |
            Contains a comma separated list of field identifiers, by which the fields of the response entities should be filtered by.
            Empty or not initialized value result in a minimal set of entity fields returned. Non-existing or invalid fields will be ignored.

          example: code,name,description
      responses:
        200:
          description: |
            Product successfully retrieved.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                        "metadata": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "mixins": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string",
                                        "format": "uri"
                                    }
                                },
                                "variants": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "options": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string",
                                                "format": "uri"
                                            }
                                        },
                                        "mixins": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string",
                                                "format": "uri"
                                            }
                                        }
                                    }
                                },
                                "version": {
                                    "type": "number"
                                },
                                "createdAt": {
                                    "type": "string",
                                    "description": "ISO 8601 format date in which the product was created."
                                },
                                "modifiedAt": {
                                    "type": "string",
                                    "description": "ISO 8601 format date in which the product was modified."
                                }
                            }
                        },
                        "id": {
                            "type": "string",
                            "description": "Unique identifier"
                        },
                        "yrn": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "YRN attribute",
                            "type": "string",
                            "format": "uri",
                            "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                        },
                        "code": {
                            "type": [
                                "string"
                            ],
                            "description": "Unique, mandatory user-defined identifier of a product",
                            "minLength": 1,
                            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                        },
                        "name": {
                            "description": "The name of the product.",
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "localized",
                            "oneOf": [
                                {
                                    "type": "string",
                                    "minLength": 1,
                                    "description": "value of property in default language"
                                },
                                {
                                    "type": "object",
                                    "description": "value of property in specific language",
                                    "additionalProperties": {
                                        "type": "string",
                                        "minLength": 1
                                    }
                                }
                            ]
                        },
                        "description": {
                            "description": "The description of the product.",
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "localized",
                            "oneOf": [
                                {
                                    "type": "string",
                                    "description": "value of property in default language"
                                },
                                {
                                    "type": "object",
                                    "description": "value of property in specific language",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "published": {
                            "type": "boolean",
                            "default": false,
                            "description": "This flag determines if product is live."
                        },
                        "media": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "description": "Media file metadata",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "yrn": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "YRN attribute",
                                        "type": "string",
                                        "format": "uri",
                                        "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                    },
                                    "mediaId": {
                                        "type": "string"
                                    },
                                    "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "URL of file content"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "Media file tags"
                                    },
                                    "contentType": {
                                        "type": "string",
                                        "description": "MIME type of the media file"
                                    },
                                    "stored": {
                                        "type": "boolean",
                                        "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                                    },
                                    "createdAt": {
                                        "type": "string",
                                        "description": "Date of media metadata creation."
                                    },
                                    "commitLink": {
                                        "type": "string",
                                        "description": "Contains link which is used when user triggers media commit operation. This link is not returned to user as product service internally triggers the commit"
                                    },
                                    "uploadLink": {
                                        "type": "string",
                                        "description": "Contains link on which user should send media for upload before he triggers the commit operation"
                                    },
                                    "uncommittedMedia": {
                                        "type": "boolean",
                                        "description": "If true, the media file is not committed yet. Not committed media does no have url property provided"
                                    }
                                },
                                "additionalProperties": false
                            },
                            "description": "Contains media information (including url). This attribute is Read-Only, to manage media collection please use the /media subresource. To get this attribute included in product please add the expand=media query param. By default this attribute is not returned with product."
                        },
                        "mixins": {
                            "type": "object"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "id",
                        "yrn"
                    ]
                }
              example: |
                {
                    "id": "545b4e3dfaee4c10def3db24",
                    "yrn": "urn:yaas:hybris:product:product:myshop;545b4e3dfaee4c10def3db24",
                    "code": "SmartphoneZonyYperiaX21415269949943",
                    "name": "Smartphone Zony Yperia X2",
                    "description": "The world's best camera and camcorder in a waterproof smartphone.",
                    "published": false
                }
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "Accept-Language",
                            "message": "not a language",
                            "type": "invalid_header"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        401:
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        404:
          description: |
            The requested resource does not exist.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        500:
          description: |
            Some server-side error occurred. Any details will be provided within the response payload.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        503:
          description: |
            Service temporarily unavailable.
              body:
                application/json:
                  schema: errorMessage

    put:
      is: [ localizedModification, oauth2, restricted ]
      description: |
        Update a single product.

        Accepted scopes:

        * `hybris.product_update` - required to update product data
        * `hybris.product_publish` - required to publish the product (by setting `published` flag to `true`)
        * `hybris.product_unpublish` - required to unpublish the product (by setting `published` flag to `false`)

      headers:
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
        Content-Language:
          type: string
          description: |
            Single language code. If provided localized values should be provided as simple Strings, otherwise a 'language code/ value' map is expected for localized values.

          example: pl
          required: false
      queryParameters:
        partial:
          type: boolean
          description: |
            If true, a partial update will be supported, otherwise the full object replacement will be performed.

          example: false
      body:
        application/json:
          schema: |
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "metadata": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "mixins": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            },
                            "variants": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "options": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string",
                                            "format": "uri"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "code": {
                        "type": [
                            "string"
                        ],
                        "description": "Unique, mandatory user-defined identifier of a product",
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                    },
                    "name": {
                        "description": "The name of the product.",
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "localized",
                        "oneOf": [
                            {
                                "type": "string",
                                "minLength": 1,
                                "description": "value of property in default language"
                            },
                            {
                                "type": "object",
                                "description": "value of property in specific language",
                                "additionalProperties": {
                                    "type": "string",
                                    "minLength": 1
                                }
                            }
                        ]
                    },
                    "description": {
                        "description": "The description of the product.",
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "localized",
                        "oneOf": [
                            {
                                "type": "string",
                                "description": "value of property in default language"
                            },
                            {
                                "type": "object",
                                "description": "value of property in specific language",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "published": {
                        "type": "boolean",
                        "default": false,
                        "description": "This flag determines if product is live."
                    },
                    "mixins": {
                        "type": "object"
                    }
                },
                "additionalProperties": false,
                "required": [
                    "name",
                    "code"
                ]
            }
          example: |
            {
                "name": "Smartphone Zony Yperia X2",
                "code": "545b4e3dfaee4c10def3db24",
                "description": "The world's cheapest camera and camcorder in a simple smartphone."
            }
      responses:
        200:
          description: |
            The resource has been successfully updated.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string"
                        },
                        "message": {
                            "type": "string"
                        },
                        "data": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "code"
                    ]
                }
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "Content-Language",
                            "message": "not a language",
                            "type": "invalid_header"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        401:
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        404:
          description: |
            The requested resource does not exist.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        409:
          description: |
            There are three possible reasons:
            1. Product with given code already exists, please choose unique code for your product
            2. Optimistic locking failed. If user sends metadata/version attribute which is outdated (someone else updated product in the time user was performing his changes). User should retrieve the latest product data and retry the request.
            3. Optimistic locking failed. User did not provide metadata/version attribute in update request, but someone else updated product while it was internally handled by product service. Resending the same request can result in successful update, but the update can override recently persisted changes.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        500:
          description: |
            Some server-side error occurred. Any details will be provided within the response payload.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        503:
          description: |
            Service temporarily unavailable.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
    delete:
      is: [ oauth2, restricted ]
      description: |
        Delete a single Product entity.

        Accepted scopes:

        * `hybris.product_delete` - mandatory

      headers:
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      responses:
        204:
          description: |
            The resource has been successfully deleted.

        401:
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        404:
          description: |
            The requested resource does not exist.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        500:
          description: |
            Some server-side error occurred. Any details will be provided within the response payload.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        503:
          description: |
            Service temporarily unavailable.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
    /media:
      description: |
        Media files of the product.

      post:
        is: [ oauth2, restricted ]
        description: |
          Initialize process of creating new media file for product

          Accepted scopes:

          * `hybris.product_update` - mandatory

        headers:
          Authorization:
            type: string
            description: |
              Used to send a valid OAuth2 access token.

            example: Bearer access_token
            required: true
        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "description": "Media file metadata",
                  "properties": {
                      "tags": {
                          "type": "array",
                          "items": {
                              "type": "string"
                          },
                          "description": "Media file tags"
                      },
                      "position": {
                          "type": "integer",
                          "default": 0,
                          "description": "Media order is set based on position property. Position is indexed from 0. If value is <= 0 the media is ordered as first. If value is higher that media count or is not specified the media is ordered as last. When retrieving product media they are ordered, but position property is not returned as it is not persisted"
                      },
                      "contentType": {
                          "type": "string",
                          "description": "MIME type of the file. The provided content type should be the same as the Content-Type header provided during media update, otherwise the update will fail"
                      },
                      "customAttributes": {
                          "type": "object",
                          "additionalProperties": true,
                          "description": "Map of custom attributes. The map key should be a string, the value can be any JSON object"
                      }
                  },
                  "additionalProperties": false,
                  "required": [
                      "contentType"
                  ]
              }
            example: |
              {
                  "contentType": "image/jpeg",
                  "position": 1,
                  "tags": [
                      "documentation",
                      "marketing"
                  ],
                  "customAttributes": {
                      "size": "large"
                  }
              }
        responses:
          200:
            description: |
              The process is successfully started.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                          "id": {
                              "type": "string"
                          },
                          "yrn": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "YRN attribute",
                              "type": "string",
                              "format": "uri",
                              "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                          },
                          "uploadLink": {
                              "type": "string"
                          }
                      },
                      "required": [
                          "id",
                          "uploadLink",
                          "yrn"
                      ]
                  }
          401:
            description: |
              Given request is unauthorized. Bad or expired token. Reauthenticate
              the user. Any details will be provided within the response payload.

            body:
              application/json:
                example: |
                  {
                      "status": 401,
                      "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                      "type": "insufficient_credentials",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          403:
            description: |
              Evaluated request scopes in access token are not sufficient and do not match required scopes.

            body:
              application/json:
                example: |
                  {
                      "status": 403,
                      "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                      "type": "insufficient_permissions"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          404:
            description: |
              The requested resource does not exist.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          500:
            description: |
              Some server-side error occurred. Any details will be provided within the response payload.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          503:
            description: |
              Service temporarily unavailable.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
      get:
        is: [ oauth2, restricted ]
        description: |
          Return metadata of media files. The list is ordered according to the "position" attribute set in the file metadata.

          Accepted scopes:

          * `hybris.product_read_unpublished` - required to retrieve media metadata of non-public product

        headers:
          Authorization:
            type: string
            description: |
              Used to send a valid OAuth2 access token.

            example: Bearer access_token
            required: true
        responses:
          200:
            description: |
              Resource successfully retrieved.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "array",
                      "items": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "type": "object",
                          "description": "Media file metadata",
                          "properties": {
                              "id": {
                                  "type": "string"
                              },
                              "yrn": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "YRN attribute",
                                  "type": "string",
                                  "format": "uri",
                                  "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                              },
                              "createdAt": {
                                  "type": "string",
                                  "description": "ISO 8601 format date in which the media metadata was created."
                              },
                              "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "URL of file content"
                              },
                              "tags": {
                                  "type": "array",
                                  "items": {
                                      "type": "string"
                                  },
                                  "description": "Media file tags"
                              },
                              "contentType": {
                                  "type": "string",
                                  "description": "MIME type of the media file",
                                  "example": "image/jpeg"
                              },
                              "uploadLink": {
                                  "type": "string",
                                  "description": "Link on which user should upload (PUT) media file."
                              },
                              "uncommittedMedia": {
                                  "type": "boolean",
                                  "description": "If true, the media file is not committed yet. If property is set to false or is not present the media is already committed"
                              },
                              "customAttributes": {
                                  "type": "object",
                                  "additionalProperties": true,
                                  "description": "Map of custom attributes. The map key is a string, the value can be any JSON object"
                              }
                          },
                          "additionalProperties": false
                      }
                  }
                example: |
                  [
                      {
                          "id": "123abc567def",
                          "yrn": "urn:yaas:hybris:product:product-media:myshop;545b4e3dfaee4c10def3db24;123abc567def",
                          "url": "https://api.us.yaas.io/media/v2/public/files/12345678",
                          "contentType": "image/jpeg",
                          "tags": [
                              "documentation",
                              "marketing"
                          ],
                          "customAttributes": {
                              "size": "large"
                          }
                      },
                      {
                          "id": "321abc567fed",
                          "yrn": "urn:yaas:hybris:product:product-media:myshop;545b4e3dfaee4c10def3db24;321abc567fed",
                          "url": "https://api.us.yaas.io/media/v2/public/files/23456789",
                          "contentType": "application/pdf",
                          "tags": [
                              "whitepaper"
                          ]
                      }
                  ]
          401:
            description: |
              Given request is unauthorized. Bad or expired token. Reauthenticate
              the user. Any details will be provided within the response payload.

            body:
              application/json:
                example: |
                  {
                      "status": 401,
                      "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                      "type": "insufficient_credentials",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          403:
            description: |
              Evaluated request scopes in access token are not sufficient and do not match required scopes.

            body:
              application/json:
                example: |
                  {
                      "status": 403,
                      "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                      "type": "insufficient_permissions"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          404:
            description: |
              The requested resource does not exist.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          500:
            description: |
              Some server-side error occurred. Any details will be provided within the response payload.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          503:
            description: |
              Service temporarily unavailable.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
      /{mediaId}:
        uriParameters:
          mediaId:
            type: string
            required: true
        get:
          is: [ oauth2, restricted ]
          description: |
            Return media file metadata by ID.

            YRN: `urn:yaas:hybris:product:product-media:{tenant};{productId};{mediaId}`

            Accepted scope:

            * `hybris.product_read_unpublished` - to retrieve media metadata of non-public product

          headers:
            Authorization:
              type: string
              description: |
                Used to send a valid OAuth2 access token.

              example: Bearer access_token
              required: true
          responses:
            200:
              description: |
                Resource successfully retrieved.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "description": "Media file metadata",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "yrn": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "YRN attribute",
                                "type": "string",
                                "format": "uri",
                                "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                            },
                            "createdAt": {
                                "type": "string",
                                "description": "ISO 8601 format date in which the media metadata was created."
                            },
                            "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "URL of file content"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "Media file tags"
                            },
                            "contentType": {
                                "type": "string",
                                "description": "MIME type of the media file",
                                "example": "image/jpeg"
                            },
                            "uploadLink": {
                                "type": "string",
                                "description": "Link on which user should upload (PUT) media file."
                            },
                            "uncommittedMedia": {
                                "type": "boolean",
                                "description": "If true, the media file is not committed yet. If property is set to false or is not present the media is already committed"
                            },
                            "customAttributes": {
                                "type": "object",
                                "additionalProperties": true,
                                "description": "Map of custom attributes. The map key is a string, the value can be any JSON object"
                            }
                        },
                        "additionalProperties": false
                    }
                  example: |
                    {
                        "id": "123abc567def",
                        "yrn": "urn:yaas:hybris:product:product-media:myshop;545b4e3dfaee4c10def3db24;123abc567def",
                        "url": "https://api.us.yaas.io/media/v2/public/files/12345678",
                        "contentType": "image/jpeg",
                        "tags": [
                            "documentation",
                            "marketing"
                        ],
                        "customAttributes": {
                            "size": "large"
                        }
                    }
            401:
              description: |
                Given request is unauthorized. Bad or expired token. Reauthenticate
                the user. Any details will be provided within the response payload.

              body:
                application/json:
                  example: |
                    {
                        "status": 401,
                        "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                        "type": "insufficient_credentials",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            403:
              description: |
                Evaluated request scopes in access token are not sufficient and do not match required scopes.

              body:
                application/json:
                  example: |
                    {
                        "status": 403,
                        "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                        "type": "insufficient_permissions"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            404:
              description: |
                The requested resource does not exist.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            500:
              description: |
                Some server-side error occurred. Any details will be provided within the response payload.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            503:
              description: |
                Service temporarily unavailable.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
        put:
          is: [ oauth2, restricted ]
          description: |
            Update media file metadata. Note that only part of the metadata field can be updated.

            Accepted scopes:

            * `hybris.product_update` - mandatory

          headers:
            Authorization:
              type: string
              description: |
                Used to send a valid OAuth2 access token.

              example: Bearer access_token
              required: true
          queryParameters:
            partial:
              type: boolean
              description: |
                If true, a partial update will be supported, otherwise the full object replacement will be performed.

              example: false
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "description": "Schema to update media file metadata",
                    "properties": {
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Media file tags"
                        },
                        "position": {
                            "type": "integer",
                            "default": 0,
                            "description": "Media order is set based on position property. Position is indexed from 0. If value is <= 0 the media is ordered as first. If value is higher that media count or is not specified the media is ordered as last. When retrieving product media they are ordered, but position property value is not returned as it is not persisted"
                        },
                        "customAttributes": {
                            "type": "object",
                            "additionalProperties": true,
                            "description": "Map of custom attributes. The map key should be a string, the value can be any JSON object"
                        }
                    },
                    "additionalProperties": false
                }
              example: |
                {
                    "position": 1,
                    "tags": [
                        "documentation",
                        "marketing"
                    ],
                    "customAttributes": {
                        "size": "large"
                    }
                }
          responses:
            200:
              description: |
                The resource has been successfully updated.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            },
                            "data": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "code"
                        ]
                    }
            400:
              description: |
                Request syntactically incorrect. Any details will be provided within the response payload.

            401:
              description: |
                Given request is unauthorized. Bad or expired token. Reauthenticate
                the user. Any details will be provided within the response payload.

              body:
                application/json:
                  example: |
                    {
                        "status": 401,
                        "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                        "type": "insufficient_credentials",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            403:
              description: |
                Evaluated request scopes in access token are not sufficient and do not match required scopes.

              body:
                application/json:
                  example: |
                    {
                        "status": 403,
                        "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                        "type": "insufficient_permissions"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            404:
              description: |
                The requested resource does not exist.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            409:
              description: |
                Optimistic locking failed. Someone else updated product with media while user request was internally handled by product service. Resending the same request can result in successful update, but the update can override recently persisted changes.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            500:
              description: |
                Some server-side error occurred. Any details will be provided within the response payload.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            503:
              description: |
                Service temporarily unavailable.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
        delete:
          is: [ oauth2, restricted ]
          description: |
            Delete media identified by media ID.

            Accepted scopes:

            * `hybris.product_update` - mandatory

          headers:
            Authorization:
              type: string
              description: |
                Used to send a valid OAuth2 access token.

              example: Bearer access_token
              required: true
          responses:
            204:
              description: |
                The resource has been successfully deleted.

            401:
              description: |
                Given request is unauthorized. Bad or expired token. Reauthenticate
                the user. Any details will be provided within the response payload.

              body:
                application/json:
                  example: |
                    {
                        "status": 401,
                        "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                        "type": "insufficient_credentials",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            403:
              description: |
                Evaluated request scopes in access token are not sufficient and do not match required scopes.

              body:
                application/json:
                  example: |
                    {
                        "status": 403,
                        "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                        "type": "insufficient_permissions"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            404:
              description: |
                The requested resource does not exist.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            500:
              description: |
                Some server-side error occurred. Any details will be provided within the response payload.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            503:
              description: |
                Service temporarily unavailable.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
        /commit:
          post:
            is: [ oauth2, restricted ]
            description: |
              Confirms that the media file specified by the media id is updated and ready to be used with product.

              Accepted scope:

              * `hybris.product_update` - required to attach media to product

            headers:
              Authorization:
                type: string
                description: |
                  Used to send a valid OAuth2 access token.

                example: Bearer access_token
                required: true
            responses:
              202:
                description: |
                  Request to attach media to product is accepted.

                body:
                  application/json:
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "type": "object",
                          "properties": {
                              "id": {
                                  "type": "string"
                              },
                              "yrn": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "YRN attribute",
                                  "type": "string",
                                  "format": "uri",
                                  "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                              },
                              "link": {
                                  "type": "string"
                              }
                          },
                          "required": [
                              "id",
                              "link",
                              "yrn"
                          ]
                      }
              401:
                description: |
                  Given request is unauthorized. Bad or expired token. Reauthenticate
                  the user. Any details will be provided within the response payload.

                body:
                  application/json:
                    example: |
                      {
                          "status": 401,
                          "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                          "type": "insufficient_credentials",
                          "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                      }
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
              403:
                description: |
                  Evaluated request scopes in access token are not sufficient and do not match required scopes.

                body:
                  application/json:
                    example: |
                      {
                          "status": 403,
                          "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                          "type": "insufficient_permissions"
                      }
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
              404:
                description: |
                  The requested resource does not exist.

                body:
                  application/json:
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
              409:
                description: |
                  Optimistic locking failed. Someone else updated product with media while user request was internally handled by product service. Resending the same request can result in successful update, but the update can override recently persisted changes.

                body:
                  application/json:
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
              500:
                description: |
                  Some server-side error occurred. Any details will be provided within the response payload.

                body:
                  application/json:
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
              503:
                description: |
                  Service temporarily unavailable.

                body:
                  application/json:
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
    /variants:
      description: |
        Variants of the product.

      get:
        is:
          - localizedRetrieval
          - paged
          - queryable
          - oauth2
          - projectable
          - restricted
        description: |
          Get all variants for product.

          Accepted scopes:

            * `hybris.product_read_unpublished` - required to retrieve variants of non-public product. If not provided only variants of published product are returned

        headers:
          Authorization:
            type: string
            description: |
              Used to send a valid OAuth2 access token.

            example: Bearer access_token
            required: true
          Accept-Language:
            type: string
            description: |
              The value of the locale identifier of the language in which the attribute should be returned.
              Provide several values separated by comma, in order to specify fallback languages.

            example: pl
            repeat: true
            required: false
          hybris-languages:
            type: string
            description: |
              Comma separated list of language identifiers for which the localization for an attribute
              should be provided.

            example: en,pl,it
            repeat: true
            required: false
        queryParameters:
          fields:
            type: string
            description: |
              Contains a comma separated list of field identifiers, by which the fields of the response entities should be filtered by.
              Empty or not initialized value result in a minimal set of entity fields returned. Non-existing or invalid fields will be ignored.

            example: code,name,description
          q:
            type: string
            description: |
              The simple query criteria based on available fields to limit returned results or a set of modified documents.

            example: |
              species:dog name:"Clifford"

            required: false
          pageNumber:
            type: integer
            description: |
              The page number to be retrieved where the size of the pages must be specified by the pageSize parameter.
              The number of the first page is 1.

            minimum: 1
            example: 1
            default: 1
            required: false
          pageSize:
            type: integer
            description: |
              The number of documents being retrieved on the page.

            minimum: 1
            example: 16
            default: 16
            required: false
        responses:
          200:
            description: |
              Request was successful.

            headers:
              Link:
                description: |
                  Link to the current page, the next page and the previous page. Marked accordingly with *rel* **self**, *rel* **next** and *rel* **prev**. The syntax must be conform to [RFC-5988](https://tools.ietf.org/html/rfc5988).
                  The link to the current page (**self**) is required and must be provided always.
                  The link to the next page (**next**) is optional. If not present, the next page is not available, as the current page is the last page of the result.
                  The link to the previous page (**prev**) is optional. If not present, the previous page is not available, as the current page is the first page of the result.

                example: |
                  '<http://sample.com?pageNumber=2&pageSize=10>; rel="self", <http://sample.com?pageNumber=3&pageSize=10>; rel="next"'
                required: true
                repeat: true
                type: string
                displayName: Link
            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "array",
                      "items": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "type": "object",
                          "properties": {
                              "metadata": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "properties": {
                                      "mixins": {
                                          "type": "object",
                                          "additionalProperties": {
                                              "type": "string",
                                              "format": "uri"
                                          }
                                      },
                                      "version": {
                                          "type": "number"
                                      },
                                      "createdAt": {
                                          "type": "string",
                                          "description": "ISO 8601 format date in which the product variant was created."
                                      },
                                      "modifiedAt": {
                                          "type": "string",
                                          "description": "ISO 8601 format date in which the product variant was modified."
                                      }
                                  }
                              },
                              "id": {
                                  "type": "string",
                                  "description": "Unique identifier"
                              },
                              "yrn": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "YRN attribute",
                                  "type": "string",
                                  "format": "uri",
                                  "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                              },
                              "code": {
                                  "type": [
                                      "string"
                                  ],
                                  "description": "Unique, mandatory user-defined identifier of a product variant",
                                  "minLength": 1,
                                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                              },
                              "name": {
                                  "description": "The name of the product variant.",
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "localized",
                                  "oneOf": [
                                      {
                                          "type": "string",
                                          "description": "value of property in default language"
                                      },
                                      {
                                          "type": "object",
                                          "description": "value of property in specific language",
                                          "additionalProperties": {
                                                   "type": "string"
                                          }
                                      },
                                      {
                                          "type": "null"
                                      }
                                  ]
                              },
                              "options": {
                                  "type": "object"
                              },
                              "media": {
                                  "type": "array",
                                  "items": {
                                      "type": "object",
                                      "description": "Media file metadata",
                                      "properties": {
                                          "id": {
                                              "type": "string"
                                          },
                                          "yrn": {
                                              "$schema": "http://json-schema.org/draft-04/schema#",
                                              "title": "YRN attribute",
                                              "type": "string",
                                              "format": "uri",
                                              "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                          },
                                          "mediaId": {
                                              "type": "string"
                                          },
                                          "url": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "URL of file content"
                                          },
                                          "tags": {
                                              "type": "array",
                                              "items": {
                                                  "type": "string"
                                              },
                                              "description": "Media file tags"
                                          },
                                          "contentType": {
                                              "type": "string",
                                              "description": "MIME type of the media file"
                                          },
                                          "stored": {
                                              "type": "boolean",
                                              "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                                          },
                                          "createdAt": {
                                              "type": "string",
                                              "description": "Date of media metadata creation."
                                          },
                                          "commitLink": {
                                              "type": "string",
                                              "description": "Contains link which is used when user triggers media commit operation. This link is not returned to user as product service internally triggers the commit"
                                          },
                                          "uploadLink": {
                                              "type": "string",
                                              "description": "Contains link on which user should send media for upload before he triggers the commit operation"
                                          },
                                          "uncommittedMedia": {
                                              "type": "boolean",
                                              "description": "If true, the media file is not committed yet. Not committed media does no have url property provided"
                                          }
                                      },
                                      "additionalProperties": false
                                  },
                                  "description": "Contains media information (including url). This attribute is Read-Only, to manage media collection please use the /media subresource. To get this attribute included in product please add the expand=media query param. By default this attribute is not returned with product."
                              },
                              "mixins": {
                                  "type": "object"
                              },
                              "default": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "This flag determines if variant is a default variant."
                              }
                          },
                          "additionalProperties": false,
                          "required": [
                              "id",
                              "yrn"
                          ]
                      }
                  }
                example: |
                  [
                      {
                          "id": "438954845899094",
                          "yrn": "urn:yaas:hybris:product:product-variant:myshop;545b4e3dfaee4c10def3db24;438954845899094",
                          "name": "Black Small YaaS T-Shirt",
                          "code": "yaas-t-shirt-black-small",
                          "options": {
                              "tshirt": {
                                  "color": "black",
                                  "size": "small"
                              }
                          }
                      }
                  ]
          400:
            description: |
              Request syntactically incorrect. Any details will be provided within the response payload.
            body:
              application/json:
                example: |
                  {
                      "status": 400,
                      "message": "There are validation problems, see details section for more information",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                      "type": "validation_violation",
                      "details": [
                          {
                              "field": "Accept-Language",
                              "message": "not a language",
                              "type": "invalid_header"
                          }
                      ]
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          401:
            description: |
              Given request is unauthorized. Bad or expired token. Reauthenticate
              the user. Any details will be provided within the response payload.

            body:
              application/json:
                example: |
                  {
                      "status": 401,
                      "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                      "type": "insufficient_credentials",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          403:
            description: |
              Evaluated request scopes in access token are not sufficient and do not match required scopes.

            body:
              application/json:
                example: |
                  {
                      "status": 403,
                      "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                      "type": "insufficient_permissions"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          404:
            description: |
              The requested resource does not exist.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          500:
            description: |
              Some server-side error occurred. Any details will be provided within the response payload.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          503:
            description: |
              Service temporarily unavailable.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
      post:
        is: [ localizedModification, restricted, oauth2 ]
        description: |
          Create new product variant.

          Accepted scopes:

            * `hybris.product_create` - mandatory

        headers:
          Authorization:
            type: string
            description: |
              Used to send a valid OAuth2 access token.

            example: Bearer access_token
            required: true
          Content-Language:
            type: string
            description: |
              Single language code. If provided localized values should be provided as simple Strings, otherwise a 'language code/value' map is expected for localized values.

            example: pl
            required: false
        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                      "code": {
                          "type": [
                              "string"
                          ],
                          "description": "Unique, mandatory user-defined identifier of a product variant",
                          "minLength": 1,
                          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                      },
                      "name": {
                          "description": "The name of the product variant.",
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "localized",
                          "oneOf": [
                              {
                                  "type": "string",
                                  "description": "value of property in default language"
                              },
                              {
                                  "type": "object",
                                  "description": "value of property in specific language",
                                  "additionalProperties": {
                                                   "type": "string"
                                  }
                              },
                              {
                                  "type": "null"
                              }
                          ]
                      },
                      "options": {
                          "type": "object"
                      },
                      "default": {
                          "type": "boolean",
                          "default": false,
                          "description": "This flag determines if variant is a default variant."
                      }
                  },
                  "additionalProperties": false,
                  "required": [
                      "code"
                  ]
              }
            example: |
              {
                  "name": "Black Small YaaS T-Shirt",
                  "code": "yaas-t-shirt-black-small",
                  "options": {
                      "tshirt": {
                          "color": "black",
                          "size": "small"
                      }
                  }
              }
        responses:
          201:
            description: |
              The resource has been successfully created.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                          "id": {
                              "type": "string"
                          },
                          "yrn": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "YRN attribute",
                              "type": "string",
                              "format": "uri",
                              "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                          },
                          "link": {
                              "type": "string"
                          }
                      },
                      "required": [
                          "id",
                          "link",
                          "yrn"
                      ]
                  }
            headers:
              Location:
                description: |
                  The Location of the new resource which was created by the request.
                  The value consists of a single absolute URI.

                example: http://www.hybris.com/items/myItem
                required: true
                displayName: Location
                type: string
          400:
            description: |
              Request syntactically incorrect. Any details will be provided within the response payload.
            body:
              application/json:
                example: |
                  {
                      "status": 400,
                      "message": "There are validation problems, see details section for more information",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                      "type": "validation_violation",
                      "details": [
                          {
                              "field": "Content-Language",
                              "message": "not a language",
                              "type": "invalid_header"
                          }
                      ]
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          401:
            description: |
              Given request is unauthorized. Bad or expired token. Reauthenticate
              the user. Any details will be provided within the response payload.

            body:
              application/json:
                example: |
                  {
                      "status": 401,
                      "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                      "type": "insufficient_credentials",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          403:
            description: |
              Access forbidden. The caller is not allowed to access this resource.
            body:
              application/json:
                example: |
                  {
                      "status": 403,
                      "message": "Not allowed to access this resource",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                      "type": "insufficient_permissions"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          404:
            description: |
              The requested resource does not exist.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          409:
            description: |
              Variant with given code already exists.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          500:
            description: |
              Some server-side error occurred. Any details will be provided within the response payload.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          503:
            description: |
              Service temporarily unavailable.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
      delete:
        is: [ oauth2, restricted ]
        description: |
          Delete all variants entities for specified product id.

          Accepted scopes:

          * `hybris.product_delete` - mandatory

        headers:
          Authorization:
            type: string
            description: |
              Used to send a valid OAuth2 access token.

            example: Bearer access_token
            required: true
        responses:
          204:
            description: |
              All products have been successfully deleted.

          401:
            description: |
              Given request is unauthorized. Bad or expired token. Reauthenticate
              the user. Any details will be provided within the response payload.

            body:
              application/json:
                example: |
                  {
                      "status": 401,
                      "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                      "type": "insufficient_credentials",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          403:
            description: |
              Evaluated request scopes in access token are not sufficient and do not match required scopes.

            body:
              application/json:
                example: |
                  {
                      "status": 403,
                      "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                      "type": "insufficient_permissions"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          500:
            description: |
              Some server-side error occurred. Any details will be provided within the response payload.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          503:
            description: |
              Service temporarily unavailable.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
      /{variantId}:
        uriParameters:
          variantId:
            type: string
            required: true
        get:
          is: [ localizedRetrieval, oauth2, restricted ]
          description: |
            Retrieve a single product variant.

            YRN: `urn:yaas:hybris:product:product-variant:{tenant};{productId};{variantId}`

            Accepted scopes:

            * `hybris.product_read_unpublished` - required to retrieve non-public product variants

          headers:
            Authorization:
              type: string
              description: |
                Used to send a valid OAuth2 access token.

              example: Bearer access_token
              required: true
            Accept-Language:
              type: string
              description: |
                The value of the locale identifier of the language in which the attribute should be returned.
                Provide several values separated by comma, in order to specify fallback languages.

              example: pl
              repeat: true
              required: false
            hybris-languages:
              type: string
              description: |
                Comma separated list of language identifiers for which the localization for an attribute
                should be provided.

              example: en,pl,it
              repeat: true
              required: false
          responses:
            200:
              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                            "metadata": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "mixins": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string",
                                            "format": "uri"
                                        }
                                    },
                                    "version": {
                                        "type": "number"
                                    },
                                    "createdAt": {
                                        "type": "string",
                                        "description": "ISO 8601 format date in which the product variant was created."
                                    },
                                    "modifiedAt": {
                                        "type": "string",
                                        "description": "ISO 8601 format date in which the product variant was modified."
                                    }
                                }
                            },
                            "id": {
                                "type": "string",
                                "description": "Unique identifier"
                            },
                            "yrn": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "YRN attribute",
                                "type": "string",
                                "format": "uri",
                                "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                            },
                            "code": {
                                "type": [
                                    "string"
                                ],
                                "description": "Unique, mandatory user-defined identifier of a product variant",
                                "minLength": 1,
                                "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                            },
                            "name": {
                                "description": "The name of the product variant.",
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "localized",
                                "oneOf": [
                                    {
                                        "type": "string",
                                        "description": "value of property in default language"
                                    },
                                    {
                                        "type": "object",
                                        "description": "value of property in specific language",
                                        "additionalProperties": {
                                                   "type": "string"
                                        }
                                    },
                                    {
                                        "type": "null"
                                    }
                                ]
                            },
                            "options": {
                                "type": "object"
                            },
                            "media": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "description": "Media file metadata",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "yrn": {
                                            "$schema": "http://json-schema.org/draft-04/schema#",
                                            "title": "YRN attribute",
                                            "type": "string",
                                            "format": "uri",
                                            "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                        },
                                        "mediaId": {
                                            "type": "string"
                                        },
                                        "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL of file content"
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "Media file tags"
                                        },
                                        "contentType": {
                                            "type": "string",
                                            "description": "MIME type of the media file"
                                        },
                                        "stored": {
                                            "type": "boolean",
                                            "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "description": "Date of media metadata creation."
                                        },
                                        "commitLink": {
                                            "type": "string",
                                            "description": "Contains link which is used when user triggers media commit operation. This link is not returned to user as product service internally triggers the commit"
                                        },
                                        "uploadLink": {
                                            "type": "string",
                                            "description": "Contains link on which user should send media for upload before he triggers the commit operation"
                                        },
                                        "uncommittedMedia": {
                                            "type": "boolean",
                                            "description": "If true, the media file is not committed yet. Not committed media does no have url property provided"
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "description": "Contains media information (including url). This attribute is Read-Only, to manage media collection please use the /media subresource. To get this attribute included in product please add the expand=media query param. By default this attribute is not returned with product."
                            },
                            "mixins": {
                                "type": "object"
                            },
                            "default": {
                                "type": "boolean",
                                "default": false,
                                "description": "This flag determines if variant is a default variant."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "id",
                            "yrn"
                        ]
                    }
                  example: |
                    {
                        "id": "438954845899094",
                        "yrn": "urn:yaas:hybris:product:product-variant:myshop;545b4e3dfaee4c10def3db24;438954845899094",
                        "name": "Black Small YaaS T-Shirt",
                        "code": "yaas-t-shirt-black-small",
                        "options": {
                            "tshirt": {
                                "color": "black",
                                "size": "small"
                            }
                        }
                    }
            400:
              description: |
                Request syntactically incorrect. Any details will be provided within the response payload.
              body:
                application/json:
                  example: |
                    {
                        "status": 400,
                        "message": "There are validation problems, see details section for more information",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                        "type": "validation_violation",
                        "details": [
                            {
                                "field": "Accept-Language",
                                "message": "not a language",
                                "type": "invalid_header"
                            }
                        ]
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            401:
              description: |
                Given request is unauthorized. Bad or expired token. Reauthenticate
                the user. Any details will be provided within the response payload.

              body:
                application/json:
                  example: |
                    {
                        "status": 401,
                        "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                        "type": "insufficient_credentials",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            403:
              description: |
                Evaluated request scopes in access token are not sufficient and do not match required scopes.

              body:
                application/json:
                  example: |
                    {
                        "status": 403,
                        "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                        "type": "insufficient_permissions"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            404:
              description: |
                The requested resource does not exist.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            500:
              description: |
                Some server-side error occurred. Any details will be provided within the response payload.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            503:
              description: |
                Service temporarily unavailable.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
        put:
          is: [ localizedModification, restricted, oauth2 ]
          description: |
            Replace a single product variant.

            Accepted scopes:

            * `hybris.product_update` - required to update product variant data

          headers:
            Authorization:
              type: string
              description: |
                Used to send a valid OAuth2 access token.

              example: Bearer access_token
              required: true
            Content-Language:
              type: string
              description: |
                Single language code. If provided localized values should be provided as simple Strings, otherwise a 'language code/ value' map is expected for localized values.

              example: pl
              required: false
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": [
                                "string"
                            ],
                            "description": "Unique, mandatory user-defined identifier of a product variant",
                            "minLength": 1,
                            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                        },
                        "name": {
                            "description": "The name of the product variant.",
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "localized",
                            "oneOf": [
                                {
                                    "type": "string",
                                    "description": "value of property in default language"
                                },
                                {
                                    "type": "object",
                                    "description": "value of property in specific language",
                                    "additionalProperties": {
                                                   "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "options": {
                            "type": "object"
                        },
                        "default": {
                            "type": "boolean",
                            "default": false,
                            "description": "This flag determines if variant is a default variant."
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "code"
                    ]
                }
              example: |
                {
                    "name": "Black Small YaaS T-Shirt",
                    "code": "yaas-t-shirt-black-small",
                    "options": {
                        "tshirt": {
                            "color": "black",
                            "size": "small"
                        }
                    }
                }
          responses:
            200:
              description: |
                The resource has been successfully updated.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            },
                            "data": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "code"
                        ]
                    }
            400:
              description: |
                Request syntactically incorrect. Any details will be provided within the response payload.

              body:
                application/json:
                  example: |
                    {
                        "status": 400,
                        "message": "There are validation problems, see details section for more information",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                        "type": "validation_violation",
                        "details": [
                            {
                                "field": "Content-Language",
                                "message": "not a language",
                                "type": "invalid_header"
                            }
                        ]
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            401:
              description: |
                Given request is unauthorized. Bad or expired token. Reauthenticate
                the user. Any details will be provided within the response payload.

              body:
                application/json:
                  example: |
                    {
                        "status": 401,
                        "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                        "type": "insufficient_credentials",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            403:
              description: |
                Access forbidden. The caller is not allowed to access this resource.
              body:
                application/json:
                  example: |
                    {
                        "status": 403,
                        "message": "Not allowed to access this resource",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                        "type": "insufficient_permissions"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            404:
              description: |
                The requested resource does not exist.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            409:
              description: |
                Product with given sku already exists.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            500:
              description: |
                Some server-side error occurred. Any details will be provided within the response payload.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            503:
              description: |
                Service temporarily unavailable.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
        delete:
          is: [ oauth2, restricted ]
          description: |
            Delete a single Product variant entity.

            Accepted scopes:

            * `hybris.product_delete` - mandatory

          headers:
            Authorization:
              type: string
              description: |
                Used to send a valid OAuth2 access token.

              example: Bearer access_token
              required: true
          responses:
            204:
              description: |
                The resource has been successfully deleted.

            401:
              description: |
                Given request is unauthorized. Bad or expired token. Reauthenticate
                the user. Any details will be provided within the response payload.

              body:
                application/json:
                  example: |
                    {
                        "status": 401,
                        "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                        "type": "insufficient_credentials",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            403:
              description: |
                Evaluated request scopes in access token are not sufficient and do not match required scopes.

              body:
                application/json:
                  example: |
                    {
                        "status": 403,
                        "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                        "type": "insufficient_permissions"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            404:
              description: |
                The requested resource does not exist.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            500:
              description: |
                Some server-side error occurred. Any details will be provided within the response payload.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            503:
              description: |
                Service temporarily unavailable.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
        /media:
          description: |
            Media files of the variant.

          post:
            is: [ oauth2, restricted ]
            description: |
              Initialize process of creating new media file for variant

              Accepted scopes:

              * `hybris.product_update` - mandatory

            headers:
              Authorization:
                type: string
                description: |
                  Used to send a valid OAuth2 access token.

                example: Bearer access_token
                required: true
            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "description": "Media file metadata",
                      "properties": {
                          "tags": {
                              "type": "array",
                              "items": {
                                  "type": "string"
                              },
                              "description": "Media file tags"
                          },
                          "position": {
                              "type": "integer",
                              "default": 0,
                              "description": "Media order is set based on position property. Position is indexed from 0. If value is <= 0 the media is ordered as first. If value is higher that media count or is not specified the media is ordered as last. When retrieving product media they are ordered, but position property is not returned as it is not persisted"
                          },
                          "contentType": {
                              "type": "string",
                              "description": "MIME type of the file. The provided content type should be the same as the Content-Type header provided during media update, otherwise the update will fail"
                          },
                          "customAttributes": {
                              "type": "object",
                              "additionalProperties": true,
                              "description": "Map of custom attributes. The map key should be a string, the value can be any JSON object"
                          }
                      },
                      "additionalProperties": false,
                      "required": [
                          "contentType"
                      ]
                  }
                example: |
                  {
                      "contentType": "image/jpeg",
                      "position": 1,
                      "tags": [
                          "documentation",
                          "marketing"
                      ],
                      "customAttributes": {
                          "size": "large"
                      }
                  }
            responses:
              200:
                description: |
                  The process is successfully started.

                body:
                  application/json:
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "type": "object",
                          "properties": {
                              "id": {
                                  "type": "string"
                              },
                              "yrn": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "YRN attribute",
                                  "type": "string",
                                  "format": "uri",
                                  "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                              },
                              "uploadLink": {
                                  "type": "string"
                              }
                          },
                          "required": [
                              "id",
                              "uploadLink",
                              "yrn"
                          ]
                      }
              401:
                description: |
                  Given request is unauthorized. Bad or expired token. Reauthenticate
                  the user. Any details will be provided within the response payload.

                body:
                  application/json:
                    example: |
                      {
                          "status": 401,
                          "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                          "type": "insufficient_credentials",
                          "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                      }
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
              403:
                description: |
                  Evaluated request scopes in access token are not sufficient and do not match required scopes.

                body:
                  application/json:
                    example: |
                      {
                          "status": 403,
                          "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                          "type": "insufficient_permissions"
                      }
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
              404:
                description: |
                  The requested resource does not exist.

                body:
                  application/json:
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
              500:
                description: |
                  Some server-side error occurred. Any details will be provided within the response payload.

                body:
                  application/json:
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
              503:
                description: |
                  Service temporarily unavailable.

                body:
                  application/json:
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
          get:
            is: [ oauth2, restricted ]
            description: |
              Return metadata of media files. The list is ordered according to the "position" attribute set in the file metadata.

              Accepted scopes:

              * `hybris.product_read_unpublished` - required to retrieve media metadata of a variant that belongs to a non-public product

            headers:
              Authorization:
                type: string
                description: |
                  Used to send a valid OAuth2 access token.

                example: Bearer access_token
                required: true
            responses:
              200:
                description: |
                  Resource successfully retrieved.

                body:
                  application/json:
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "type": "array",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "type": "object",
                              "description": "Media file metadata",
                              "properties": {
                                  "id": {
                                      "type": "string"
                                  },
                                  "yrn": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "YRN attribute",
                                      "type": "string",
                                      "format": "uri",
                                      "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                  },
                                  "createdAt": {
                                      "type": "string",
                                      "description": "ISO 8601 format date in which the media metadata was created."
                                  },
                                  "url": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "URL of file content"
                                  },
                                  "tags": {
                                      "type": "array",
                                      "items": {
                                          "type": "string"
                                      },
                                      "description": "Media file tags"
                                  },
                                  "contentType": {
                                      "type": "string",
                                      "description": "MIME type of the media file",
                                      "example": "image/jpeg"
                                  },
                                  "uploadLink": {
                                      "type": "string",
                                      "description": "Link on which user should upload (PUT) media file."
                                  },
                                  "uncommittedMedia": {
                                      "type": "boolean",
                                      "description": "If true, the media file is not committed yet. If property is set to false or is not present the media is already committed"
                                  },
                                  "customAttributes": {
                                      "type": "object",
                                      "additionalProperties": true,
                                      "description": "Map of custom attributes. The map key is a string, the value can be any JSON object"
                                  }
                              },
                              "additionalProperties": false
                          }
                      }
                    example: |
                      [
                          {
                              "id": "123abc567def",
                              "yrn": "urn:yaas:hybris:product:product-variant-media:myshop;545b4e3dfaee4c10def3db24;438954845899094;123abc567def",
                              "url": "https://api.us.yaas.io/media/v2/public/files/12345678",
                              "contentType": "image/jpeg",
                              "tags": [
                                  "documentation",
                                  "marketing"
                              ],
                              "customAttributes": {
                                  "size": "large"
                              }
                          },
                          {
                              "id": "321abc567fed",
                              "yrn": "urn:yaas:hybris:product:product-variant-media:myshop;545b4e3dfaee4c10def3db24;438954845899094;321abc567fed",
                              "url": "https://api.us.yaas.io/media/v2/public/files/23456789",
                              "contentType": "application/pdf",
                              "tags": [
                                  "whitepaper"
                              ]
                          }
                      ]
              401:
                description: |
                  Given request is unauthorized. Bad or expired token. Reauthenticate
                  the user. Any details will be provided within the response payload.

                body:
                  application/json:
                    example: |
                      {
                          "status": 401,
                          "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                          "type": "insufficient_credentials",
                          "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                      }
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
              403:
                description: |
                  Evaluated request scopes in access token are not sufficient and do not match required scopes.

                body:
                  application/json:
                    example: |
                      {
                          "status": 403,
                          "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                          "type": "insufficient_permissions"
                      }
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
              404:
                description: |
                  The requested resource does not exist.

                body:
                  application/json:
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
              500:
                description: |
                  Some server-side error occurred. Any details will be provided within the response payload.

                body:
                  application/json:
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
              503:
                description: |
                  Service temporarily unavailable.

                body:
                  application/json:
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
          /{mediaId}:
            uriParameters:
              mediaId:
                type: string
                required: true
            get:
              is: [ oauth2, restricted ]
              description: |
                Return media file metadata by ID.

                YRN: `urn:yaas:hybris:product:product-variant-media:{tenant};{productId};{variantId};{mediaId}`

                Accepted scope:

                * `hybris.product_read_unpublished` - to retrieve media metadata of a variant that belongs to a non-public product

              headers:
                Authorization:
                  type: string
                  description: |
                    Used to send a valid OAuth2 access token.

                  example: Bearer access_token
                  required: true
              responses:
                200:
                  description: |
                    Resource successfully retrieved.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "description": "Media file metadata",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "yrn": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "YRN attribute",
                                    "type": "string",
                                    "format": "uri",
                                    "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                },
                                "createdAt": {
                                    "type": "string",
                                    "description": "ISO 8601 format date in which the media metadata was created."
                                },
                                "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URL of file content"
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "Media file tags"
                                },
                                "contentType": {
                                    "type": "string",
                                    "description": "MIME type of the media file",
                                    "example": "image/jpeg"
                                },
                                "uploadLink": {
                                    "type": "string",
                                    "description": "Link on which user should upload (PUT) media file."
                                },
                                "uncommittedMedia": {
                                    "type": "boolean",
                                    "description": "If true, the media file is not committed yet. If property is set to false or is not present the media is already committed"
                                },
                                "customAttributes": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "description": "Map of custom attributes. The map key is a string, the value can be any JSON object"
                                }
                            },
                            "additionalProperties": false
                        }
                      example: |
                        {
                            "id": "123abc567def",
                            "yrn": "urn:yaas:hybris:product:product-variant-media:myshop;545b4e3dfaee4c10def3db24;123abc567def",
                            "url": "https://api.us.yaas.io/media/v2/public/files/12345678",
                            "contentType": "image/jpeg",
                            "tags": [
                                "documentation",
                                "marketing"
                            ],
                            "customAttributes": {
                                "size": "large"
                            }
                        }
                401:
                  description: |
                    Given request is unauthorized. Bad or expired token. Reauthenticate
                    the user. Any details will be provided within the response payload.

                  body:
                    application/json:
                      example: |
                        {
                            "status": 401,
                            "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                            "type": "insufficient_credentials",
                            "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                        }
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                403:
                  description: |
                    Evaluated request scopes in access token are not sufficient and do not match required scopes.

                  body:
                    application/json:
                      example: |
                        {
                            "status": 403,
                            "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                            "type": "insufficient_permissions"
                        }
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                404:
                  description: |
                    The requested resource does not exist.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                500:
                  description: |
                    Some server-side error occurred. Any details will be provided within the response payload.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                503:
                  description: |
                    Service temporarily unavailable.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
            put:
              is: [ oauth2, restricted ]
              description: |
                Update product variant media file metadata. Note that only part of the metadata field can be updated.

                Accepted scopes:

                * `hybris.product_update` - mandatory

              headers:
                Authorization:
                  type: string
                  description: |
                    Used to send a valid OAuth2 access token.

                  example: Bearer access_token
                  required: true
              queryParameters:
                partial:
                  type: boolean
                  description: |
                    If true, a partial update will be supported, otherwise the full object replacement will be performed.

                  example: false
              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "description": "Schema to update media file metadata",
                        "properties": {
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "Media file tags"
                            },
                            "position": {
                                "type": "integer",
                                "default": 0,
                                "description": "Media order is set based on position property. Position is indexed from 0. If value is <= 0 the media is ordered as first. If value is higher that media count or is not specified the media is ordered as last. When retrieving product media they are ordered, but position property value is not returned as it is not persisted"
                            },
                            "customAttributes": {
                                "type": "object",
                                "additionalProperties": true,
                                "description": "Map of custom attributes. The map key should be a string, the value can be any JSON object"
                            }
                        },
                        "additionalProperties": false
                    }
                  example: |
                    {
                        "position": 1,
                        "tags": [
                            "documentation",
                            "marketing"
                        ],
                        "customAttributes": {
                            "size": "large"
                        }
                    }
              responses:
                200:
                  description: |
                    The resource has been successfully updated.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code"
                            ]
                        }
                400:
                  description: |
                    Request syntactically incorrect. Any details will be provided within the response payload.

                401:
                  description: |
                    Given request is unauthorized. Bad or expired token. Reauthenticate
                    the user. Any details will be provided within the response payload.

                  body:
                    application/json:
                      example: |
                        {
                            "status": 401,
                            "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                            "type": "insufficient_credentials",
                            "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                        }
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                403:
                  description: |
                    Evaluated request scopes in access token are not sufficient and do not match required scopes.

                  body:
                    application/json:
                      example: |
                        {
                            "status": 403,
                            "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                            "type": "insufficient_permissions"
                        }
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                404:
                  description: |
                    The requested resource does not exist.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                409:
                  description: |
                    Optimistic locking failed. Someone else updated product variant with media while user request was internally handled by product service. Resending the same request can result in successful update, but the update can override recently persisted changes.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                500:
                  description: |
                    Some server-side error occurred. Any details will be provided within the response payload.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                503:
                  description: |
                    Service temporarily unavailable.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
            delete:
              is: [ oauth2, restricted ]
              description: |
                Delete media identified by media ID.

                Accepted scopes:

                * `hybris.product_update` - mandatory

              headers:
                Authorization:
                  type: string
                  description: |
                    Used to send a valid OAuth2 access token.

                  example: Bearer access_token
                  required: true
              responses:
                204:
                  description: |
                    The resource has been successfully deleted.

                401:
                  description: |
                    Given request is unauthorized. Bad or expired token. Reauthenticate
                    the user. Any details will be provided within the response payload.

                  body:
                    application/json:
                      example: |
                        {
                            "status": 401,
                            "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                            "type": "insufficient_credentials",
                            "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                        }
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                403:
                  description: |
                    Evaluated request scopes in access token are not sufficient and do not match required scopes.

                  body:
                    application/json:
                      example: |
                        {
                            "status": 403,
                            "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                            "type": "insufficient_permissions"
                        }
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                404:
                  description: |
                    The requested resource does not exist.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                500:
                  description: |
                    Some server-side error occurred. Any details will be provided within the response payload.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                503:
                  description: |
                    Service temporarily unavailable.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
            /commit:
              post:
                is: [ oauth2, restricted ]
                description: |
                  Confirms that the media file specified by the media id is updated and ready to be used with product variant.

                  Accepted scope:

                  * `hybris.product_update` - required to attach media to product variant

                headers:
                  Authorization:
                    type: string
                    description: |
                      Used to send a valid OAuth2 access token.

                    example: Bearer access_token
                    required: true
                responses:
                  202:
                    description: |
                      Request to attach media to product is accepted.

                    body:
                      application/json:
                        schema: |
                          {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "type": "object",
                              "properties": {
                                  "id": {
                                      "type": "string"
                                  },
                                  "yrn": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "YRN attribute",
                                      "type": "string",
                                      "format": "uri",
                                      "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                  },
                                  "link": {
                                      "type": "string"
                                  }
                              },
                              "required": [
                                  "id",
                                  "link",
                                  "yrn"
                              ]
                          }
                  401:
                    description: |
                      Given request is unauthorized. Bad or expired token. Reauthenticate
                      the user. Any details will be provided within the response payload.

                    body:
                      application/json:
                        example: |
                          {
                              "status": 401,
                              "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                              "type": "insufficient_credentials",
                              "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                          }
                        schema: |
                          {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "error",
                              "description": "Schema for API specified errors.",
                              "type": "object",
                              "properties": {
                                  "status": {
                                      "type": "integer",
                                      "description": "original HTTP error code, should be consistent with the response HTTP code",
                                      "minimum": 100,
                                      "maximum": 599
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error type, lower case with underscore eg validation_failure",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support"
                                  },
                                  "details": {
                                      "type": "array",
                                      "description": "list of problems causing this error",
                                      "items": {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "title": "errorDetail",
                                          "description": "schema for specific error cause",
                                          "type": "object",
                                          "properties": {
                                              "field": {
                                                  "type": "string",
                                                  "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                                              },
                                              "message": {
                                                  "type": "string",
                                                  "description": "descriptive error detail message for debugging"
                                              },
                                              "moreInfo": {
                                                  "type": "string",
                                                  "format": "uri",
                                                  "description": "link to documentation to investigate further and finding support for error detail"
                                              }
                                          },
                                          "required": [
                                              "type"
                                          ]
                                      }
                                  }
                              },
                              "required": [
                                  "status",
                                  "type"
                              ]
                          }
                  403:
                    description: |
                      Evaluated request scopes in access token are not sufficient and do not match required scopes.

                    body:
                      application/json:
                        example: |
                          {
                              "status": 403,
                              "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                              "type": "insufficient_permissions"
                          }
                        schema: |
                          {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "error",
                              "description": "Schema for API specified errors.",
                              "type": "object",
                              "properties": {
                                  "status": {
                                      "type": "integer",
                                      "description": "original HTTP error code, should be consistent with the response HTTP code",
                                      "minimum": 100,
                                      "maximum": 599
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error type, lower case with underscore eg validation_failure",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support"
                                  },
                                  "details": {
                                      "type": "array",
                                      "description": "list of problems causing this error",
                                      "items": {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "title": "errorDetail",
                                          "description": "schema for specific error cause",
                                          "type": "object",
                                          "properties": {
                                              "field": {
                                                  "type": "string",
                                                  "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                                              },
                                              "message": {
                                                  "type": "string",
                                                  "description": "descriptive error detail message for debugging"
                                              },
                                              "moreInfo": {
                                                  "type": "string",
                                                  "format": "uri",
                                                  "description": "link to documentation to investigate further and finding support for error detail"
                                              }
                                          },
                                          "required": [
                                              "type"
                                          ]
                                      }
                                  }
                              },
                              "required": [
                                  "status",
                                  "type"
                              ]
                          }
                  404:
                    description: |
                      The requested resource does not exist.

                    body:
                      application/json:
                        schema: |
                          {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "error",
                              "description": "Schema for API specified errors.",
                              "type": "object",
                              "properties": {
                                  "status": {
                                      "type": "integer",
                                      "description": "original HTTP error code, should be consistent with the response HTTP code",
                                      "minimum": 100,
                                      "maximum": 599
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error type, lower case with underscore eg validation_failure",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support"
                                  },
                                  "details": {
                                      "type": "array",
                                      "description": "list of problems causing this error",
                                      "items": {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "title": "errorDetail",
                                          "description": "schema for specific error cause",
                                          "type": "object",
                                          "properties": {
                                              "field": {
                                                  "type": "string",
                                                  "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                                              },
                                              "message": {
                                                  "type": "string",
                                                  "description": "descriptive error detail message for debugging"
                                              },
                                              "moreInfo": {
                                                  "type": "string",
                                                  "format": "uri",
                                                  "description": "link to documentation to investigate further and finding support for error detail"
                                              }
                                          },
                                          "required": [
                                              "type"
                                          ]
                                      }
                                  }
                              },
                              "required": [
                                  "status",
                                  "type"
                              ]
                          }
                  409:
                    description: |
                      Optimistic locking failed. Someone else updated product variant with media while user request was internally handled by product service. Resending the same request can result in successful update, but the update can override recently persisted changes.

                    body:
                      application/json:
                        schema: |
                          {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "error",
                              "description": "Schema for API specified errors.",
                              "type": "object",
                              "properties": {
                                  "status": {
                                      "type": "integer",
                                      "description": "original HTTP error code, should be consistent with the response HTTP code",
                                      "minimum": 100,
                                      "maximum": 599
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error type, lower case with underscore eg validation_failure",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support"
                                  },
                                  "details": {
                                      "type": "array",
                                      "description": "list of problems causing this error",
                                      "items": {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "title": "errorDetail",
                                          "description": "schema for specific error cause",
                                          "type": "object",
                                          "properties": {
                                              "field": {
                                                  "type": "string",
                                                  "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                                              },
                                              "message": {
                                                  "type": "string",
                                                  "description": "descriptive error detail message for debugging"
                                              },
                                              "moreInfo": {
                                                  "type": "string",
                                                  "format": "uri",
                                                  "description": "link to documentation to investigate further and finding support for error detail"
                                              }
                                          },
                                          "required": [
                                              "type"
                                          ]
                                      }
                                  }
                              },
                              "required": [
                                  "status",
                                  "type"
                              ]
                          }
                  500:
                    description: |
                      Some server-side error occurred. Any details will be provided within the response payload.

                    body:
                      application/json:
                        schema: |
                          {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "error",
                              "description": "Schema for API specified errors.",
                              "type": "object",
                              "properties": {
                                  "status": {
                                      "type": "integer",
                                      "description": "original HTTP error code, should be consistent with the response HTTP code",
                                      "minimum": 100,
                                      "maximum": 599
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error type, lower case with underscore eg validation_failure",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support"
                                  },
                                  "details": {
                                      "type": "array",
                                      "description": "list of problems causing this error",
                                      "items": {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "title": "errorDetail",
                                          "description": "schema for specific error cause",
                                          "type": "object",
                                          "properties": {
                                              "field": {
                                                  "type": "string",
                                                  "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                                              },
                                              "message": {
                                                  "type": "string",
                                                  "description": "descriptive error detail message for debugging"
                                              },
                                              "moreInfo": {
                                                  "type": "string",
                                                  "format": "uri",
                                                  "description": "link to documentation to investigate further and finding support for error detail"
                                              }
                                          },
                                          "required": [
                                              "type"
                                          ]
                                      }
                                  }
                              },
                              "required": [
                                  "status",
                                  "type"
                              ]
                          }
                  503:
                    description: |
                      Service temporarily unavailable.

                    body:
                      application/json:
                        schema: |
                          {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "error",
                              "description": "Schema for API specified errors.",
                              "type": "object",
                              "properties": {
                                  "status": {
                                      "type": "integer",
                                      "description": "original HTTP error code, should be consistent with the response HTTP code",
                                      "minimum": 100,
                                      "maximum": 599
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error type, lower case with underscore eg validation_failure",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support"
                                  },
                                  "details": {
                                      "type": "array",
                                      "description": "list of problems causing this error",
                                      "items": {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "title": "errorDetail",
                                          "description": "schema for specific error cause",
                                          "type": "object",
                                          "properties": {
                                              "field": {
                                                  "type": "string",
                                                  "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                                              },
                                              "message": {
                                                  "type": "string",
                                                  "description": "descriptive error detail message for debugging"
                                              },
                                              "moreInfo": {
                                                  "type": "string",
                                                  "format": "uri",
                                                  "description": "link to documentation to investigate further and finding support for error detail"
                                              }
                                          },
                                          "required": [
                                              "type"
                                          ]
                                      }
                                  }
                              },
                              "required": [
                                  "status",
                                  "type"
                              ]
                          }
/{tenant}/variants:
  uriParameters:
    tenant:
      type: string
      required: true
  description: |
    Search for variants by code or id.

  get:
    is: [ localizedRetrieval, oauth2, projectable, restricted ]
    description: |
      Get variants by code or id. If user provides ids and codes only the variants that fulfill both restrictions will be returned.

      Accepted scopes:

        * `hybris.product_read_unpublished` - required to retrieve variants of non-public product. If not provided only variants of published product are returned

    headers:
      Authorization:
        type: string
        description: |
          Used to send a valid OAuth2 access token.

        example: Bearer access_token
        required: true
      Accept-Language:
        type: string
        description: |
          The value of the locale identifier of the language in which the attribute should be returned.
          Provide several values separated by comma, in order to specify fallback languages.

        example: pl
        repeat: true
        required: false
      hybris-languages:
        type: string
        description: |
          Comma separated list of language identifiers for which the localization for an attribute
          should be provided.

        example: en,pl,it
        repeat: true
        required: false
    queryParameters:
      fields:
        type: string
        description: |
          Contains a comma separated list of field identifiers, by which the fields of the response entities should be filtered by.
          If **expand=product** parameter is provided user can filter embedded product properties with product property prefixed with **product.**. Non-existing or invalid fields will be ignored.

        example: options,product.name
      id:
        type: string
        description: |
          **id** value of searched variant. If user would like to search by multiple values the **in** operator should be used. See the example.

        example: "in('VariantId123','VariantId456','VariantId98943')"
      code:
        type: string
        description: |
          **code** value of searched variant. If user would like to search by multiple values the **in** operator should be used. See the example.

        example: "in('VariantCode123','VariantCode456','VariantCode98943')"
      expand:
        type: string
        description: |
          if value set to **product**, enables user to retrieve product embedded in variant **product** property.

        example: product
    responses:
      200:
        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "array",
                  "items": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                          "metadata": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                  "mixins": {
                                      "type": "object",
                                      "additionalProperties": {
                                          "type": "string",
                                          "format": "uri"
                                      }
                                  },
                                  "version": {
                                      "type": "number"
                                  },
                                  "createdAt": {
                                      "type": "string",
                                      "description": "ISO 8601 format date in which the product variant was created."
                                  },
                                  "modifiedAt": {
                                      "type": "string",
                                      "description": "ISO 8601 format date in which the product variant was modified."
                                  }
                              }
                          },
                          "id": {
                              "type": "string",
                              "description": "Unique identifier"
                          },
                          "yrn": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "YRN attribute",
                              "type": "string",
                              "format": "uri",
                              "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                          },
                          "code": {
                              "type": [
                                  "string"
                              ],
                              "description": "Unique, mandatory user-defined identifier of a product variant",
                              "minLength": 1,
                              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                          },
                          "name": {
                              "description": "The name of the product variant.",
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "localized",
                              "oneOf": [
                                  {
                                      "type": "string",
                                      "description": "value of property in default language"
                                  },
                                  {
                                      "type": "object",
                                      "description": "value of property in specific language",
                                      "additionalProperties": {
                                                   "type": "string"
                                      }
                                  },
                                  {
                                      "type": "null"
                                  }
                              ]
                          },
                          "options": {
                              "type": "object"
                          },
                          "media": {
                              "type": "array",
                              "items": {
                                  "type": "object",
                                  "description": "Media file metadata",
                                  "properties": {
                                      "id": {
                                          "type": "string"
                                      },
                                      "yrn": {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "title": "YRN attribute",
                                          "type": "string",
                                          "format": "uri",
                                          "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                      },
                                      "mediaId": {
                                          "type": "string"
                                      },
                                      "url": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "URL of file content"
                                      },
                                      "tags": {
                                          "type": "array",
                                          "items": {
                                              "type": "string"
                                          },
                                          "description": "Media file tags"
                                      },
                                      "contentType": {
                                          "type": "string",
                                          "description": "MIME type of the media file"
                                      },
                                      "stored": {
                                          "type": "boolean",
                                          "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                                      },
                                      "createdAt": {
                                          "type": "string",
                                          "description": "Date of media metadata creation."
                                      },
                                      "commitLink": {
                                          "type": "string",
                                          "description": "Contains link which is used when user triggers media commit operation. This link is not returned to user as product service internally triggers the commit"
                                      },
                                      "uploadLink": {
                                          "type": "string",
                                          "description": "Contains link on which user should send media for upload before he triggers the commit operation"
                                      },
                                      "uncommittedMedia": {
                                          "type": "boolean",
                                          "description": "If true, the media file is not committed yet. Not committed media does no have url property provided"
                                      }
                                  },
                                  "additionalProperties": false
                              },
                              "description": "Contains media information (including url). This attribute is Read-Only, to manage media collection please use the /media subresource. To get this attribute included in product please add the expand=media query param. By default this attribute is not returned with product."
                          },
                          "mixins": {
                              "type": "object"
                          },
                          "default": {
                              "type": "boolean",
                              "default": false,
                              "description": "This flag determines if variant is a default variant."
                          }
                      },
                      "additionalProperties": false,
                      "required": [
                          "id",
                          "yrn"
                      ]
                  }
              }
            example: |
              [
                  {
                      "id": "438954845899094",
                      "yrn": "urn:yaas:hybris:product:product-variant:myshop;545b4e3dfaee4c10def3db24;438954845899094",
                      "name": "Black Small YaaS T-Shirt",
                      "code": "yaas-t-shirt-black-small",
                      "options": {
                          "tshirt": {
                              "color": "black",
                              "size": "small"
                          }
                      }
                  }
              ]
      400:
        description: |
          Request syntactically incorrect. Any details will be provided within the response payload.
        body:
          application/json:
            example: |
              {
                  "status": 400,
                  "message": "There are validation problems, see details section for more information",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "validation_violation",
                  "details": [
                      {
                          "field": "Accept-Language",
                          "message": "not a language",
                          "type": "invalid_header"
                      }
                  ]
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      401:
        description: |
          Given request is unauthorized. Bad or expired token. Reauthenticate
          the user. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                  "status": 401,
                  "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type": "insufficient_credentials",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      403:
        description: |
          Evaluated request scopes in access token are not sufficient and do not match required scopes.

        body:
          application/json:
            example: |
              {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      404:
        description: |
          The requested resource does not exist.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      500:
        description: |
          Some server-side error occurred. Any details will be provided within the response payload.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      503:
        description: |
          Service temporarily unavailable.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
/{tenant}/search:
  uriParameters:
    tenant:
      type: string
      required: true
  description: |
    Search among product and variant entities

  post:
    is: [ localizedRetrieval, oauth2, restricted ]
    description: |
      Search products and variants by yrn.
      If you would like to embed product data into requested variant then use params.variant.expand parameter with value **product**.
      Using fields parameter user can limit the properties returned with response entities. If you would like to limit the properties of product embedded in variant, use params.variant.fields parameters prefixed with **product.**, please see the example for more details.

      Accepted scopes:

        * `hybris.product_read_unpublished` - required to retrieve non-public products and variants. If not provided only published products or variants are returned

    headers:
      Authorization:
        type: string
        description: |
          Used to send a valid OAuth2 access token.

        example: Bearer access_token
        required: true
      Accept-Language:
        type: string
        description: |
          The value of the locale identifier of the language in which the attribute should be returned.
          Provide several values separated by comma, in order to specify fallback languages.

        example: pl
        repeat: true
        required: false
      hybris-languages:
        type: string
        description: |
          Comma separated list of language identifiers for which the localization for an attribute
          should be provided.

        example: en,pl,it
        repeat: true
        required: false
    body:
      application/json:
        schema: |
          {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                  "yrns": {
                      "type": "array",
                      "description": "List of yrns. Each yrn identifies either product or product variant",
                      "items": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "YRN attribute",
                          "type": "string",
                          "format": "uri",
                          "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                      }
                  },
                  "params": {
                      "type": "object",
                      "description": "Optional query params",
                      "properties": {
                          "product": {
                              "type": "object",
                              "description": "Optional query params for products",
                              "properties": {
                                  "fields": {
                                      "type": "array",
                                      "items": {
                                          "type": "string"
                                      },
                                      "description": "Optional projection for product"
                                  }
                              }
                          },
                          "variant": {
                              "type": "object",
                              "description": "Optional query params for product variant",
                              "properties": {
                                  "fields": {
                                      "type": "array",
                                      "items": {
                                          "type": "string"
                                      },
                                      "description": "Optional projection for product variant"
                                  },
                                  "expand": {
                                      "enum": [
                                          "product"
                                      ],
                                      "description": "Optional expand option for product variants"
                                  }
                              }
                          }
                      }
                  }
              },
              "additionalProperties": false,
              "required": [
                  "yrns"
              ]
          }
        example: |
          {
              "yrns": [
                  "urn:yaas:hybris:product:product:myshop;4474e3dfaee4c10def3d9b24",
                  "urn:yaas:hybris:product:product:myshop;54cc453dfaee4c10def3db24",
                  "urn:yaas:hybris:product:product:myshop;346764e3dfaee4c10defb477",
                  "urn:yaas:hybris:product:product-variant:myshop;5710b72dd2ef7d001d099fbf;57ad7bfae12690001d568a3f"
              ],
              "params": {
                  "product": {
                      "fields": [
                          "name",
                          "code",
                          "description"
                      ]
                  },
                  "variant": {
                      "fields": [
                          "options",
                          "product.name"
                      ],
                      "expand": "product"
                  }
              }
          }
    responses:
      200:
        description: |
          Search query result has been successfully retrieved.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "array",
                  "items": {
                      "oneOf": [
                          {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "type": "object",
                              "properties": {
                                  "productId": {
                                      "type": "string",
                                      "description": "Product identifier"
                                  },
                                  "id": {
                                      "type": "string",
                                      "description": "Unique identifier"
                                  },
                                  "yrn": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "YRN attribute",
                                      "type": "string",
                                      "format": "uri",
                                      "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                  },
                                  "code": {
                                      "type": [
                                          "string",
                                          "null"
                                      ],
                                      "description": "Unique, mandatory user-defined identifier of a product variant",
                                      "minLength": 1,
                                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                                  },
                                  "name": {
                                      "description": "The name of the product variant.",
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "localized",
                                      "oneOf": [
                                          {
                                              "type": "string",
                                              "description": "value of property in default language"
                                          },
                                          {
                                              "type": "object",
                                              "description": "value of property in specific language",
                                              "additionalProperties": {
                                                   "type": "string"
                                              }
                                          },
                                          {
                                              "type": "null"
                                          }
                                      ]
                                  },
                                  "options": {
                                      "type": "object"
                                  },
                                  "default": {
                                      "type": "boolean",
                                      "default": false,
                                      "description": "This flag determines if variant is a default variant."
                                  },
                                  "product": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "type": "object",
                                      "properties": {
                                          "metadata": {
                                              "type": "object",
                                              "additionalProperties": false,
                                              "properties": {
                                                  "mixins": {
                                                      "type": "object",
                                                      "additionalProperties": {
       
                                                   "type": "string",
                                                          "format": "uri"
                                                      }
                                                  },
                                                  "variants": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "properties": {
                                                          "options": {
                                                              "type": "object",
                                                              "additionalProperties": {
               
                                                   "type": "string",
                                                                  "format": "uri"
                                                              }
                                                          },
                                                          "mixins": {
                                                              "type": "object",
                                                              "additionalProperties": {
               
                                                   "type": "string",
                                                                  "format": "uri"
                                                              }
                                                          }
                                                      }
                                                  },
                                                  "version": {
                                                      "type": "number"
                                                  },
                                                  "createdAt": {
   
                                                   "type": "string",
                                                      "description": "ISO 8601 format date in which the product was created."
                                                  },
                                                  "modifiedAt": {
   
                                                   "type": "string",
                                                      "description": "ISO 8601 format date in which the product was modified."
                                                  }
                                              }
                                          },
                                          "id": {
                                              "type": "string",
                                              "description": "Unique identifier"
                                          },
                                          "yrn": {
                                              "$schema": "http://json-schema.org/draft-04/schema#",
                                              "title": "YRN attribute",
                                              "type": "string",
                                              "format": "uri",
                                              "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                          },
                                          "code": {
                                              "type": [
                                                  "string"
                                              ],
                                              "description": "Unique, mandatory user-defined identifier of a product",
                                              "minLength": 1,
                                              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                                          },
                                          "name": {
                                              "description": "The name of the product.",
                                              "$schema": "http://json-schema.org/draft-04/schema#",
                                              "title": "localized",
                                              "oneOf": [
                                                  {
   
                                                   "type": "string",
                                                      "minLength": 1,
                                                      "description": "value of property in default language"
                                                  },
                                                  {
                                                      "type": "object",
                                                      "description": "value of property in specific language",
                                                      "additionalProperties": {
       
                                                   "type": "string",
                                                          "minLength": 1
                                                      }
                                                  }
                                              ]
                                          },
                                          "description": {
                                              "description": "The description of the product.",
                                              "$schema": "http://json-schema.org/draft-04/schema#",
                                              "title": "localized",
                                              "oneOf": [
                                                  {
   
                                                   "type": "string",
                                                      "description": "value of property in default language"
                                                  },
                                                  {
                                                      "type": "object",
                                                      "description": "value of property in specific language",
                                                      "additionalProperties": {
                                                   "type": "string"
                                                      }
                                                  },
                                                  {
                                                      "type": "null"
                                                  }
                                              ]
                                          },
                                          "published": {
                                              "type": "boolean",
                                              "default": false,
                                              "description": "This flag determines if product is live."
                                          },
                                          "media": {
                                              "type": "array",
                                              "items": {
                                                  "type": "object",
                                                  "description": "Media file metadata",
                                                  "properties": {
                                                      "id": {
       
                                                   "type": "string"
                                                      },
                                                      "yrn": {
                                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                                          "title": "YRN attribute",
       
                                                   "type": "string",
                                                          "format": "uri",
                                                          "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                                      },
                                                      "mediaId": {
       
                                                   "type": "string"
                                                      },
                                                      "url": {
       
                                                   "type": "string",
                                                          "format": "uri",
                                                          "description": "URL of file content"
                                                      },
                                                      "tags": {
                                                          "type": "array",
                                                          "items": {
           
                                                   "type": "string"
                                                          },
                                                          "description": "Media file tags"
                                                      },
                                                      "contentType": {
       
                                                   "type": "string",
                                                          "description": "MIME type of the media file"
                                                      },
                                                      "stored": {
                                                          "type": "boolean",
                                                          "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                                                      },
                                                      "createdAt": {
       
                                                   "type": "string",
                                                          "description": "Date of media metadata creation."
                                                      },
                                                      "commitLink": {
       
                                                   "type": "string",
                                                          "description": "Contains link which is used when user triggers media commit operation. This link is not returned to user as product service internally triggers the commit"
                                                      },
                                                      "uploadLink": {
       
                                                   "type": "string",
                                                          "description": "Contains link on which user should send media for upload before he triggers the commit operation"
                                                      },
                                                      "uncommittedMedia": {
                                                          "type": "boolean",
                                                          "description": "If true, the media file is not committed yet. Not committed media does no have url property provided"
                                                      }
                                                  },
                                                  "additionalProperties": false
                                              },
                                              "description": "Contains media information (including url). This attribute is Read-Only, to manage media collection please use the /media subresource. To get this attribute included in product please add the expand=media query param. By default this attribute is not returned with product."
                                          },
                                          "mixins": {
                                              "type": "object"
                                          }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                          "id",
                                          "yrn"
                                      ]
                                  }
                              },
                              "additionalProperties": false,
                              "required": [
                                  "id",
                                  "yrn"
                              ]
                          },
                          {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "type": "object",
                              "properties": {
                                  "metadata": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "properties": {
                                          "mixins": {
                                              "type": "object",
                                              "additionalProperties": {
                                                  "type": "string",
                                                  "format": "uri"
                                              }
                                          },
                                          "variants": {
                                              "type": "object",
                                              "additionalProperties": false,
                                              "properties": {
                                                  "options": {
                                                      "type": "object",
                                                      "additionalProperties": {
       
                                                   "type": "string",
                                                          "format": "uri"
                                                      }
                                                  },
                                                  "mixins": {
                                                      "type": "object",
                                                      "additionalProperties": {
       
                                                   "type": "string",
                                                          "format": "uri"
                                                      }
                                                  }
                                              }
                                          },
                                          "version": {
                                              "type": "number"
                                          },
                                          "createdAt": {
                                              "type": "string",
                                              "description": "ISO 8601 format date in which the product was created."
                                          },
                                          "modifiedAt": {
                                              "type": "string",
                                              "description": "ISO 8601 format date in which the product was modified."
                                          }
                                      }
                                  },
                                  "id": {
                                      "type": "string",
                                      "description": "Unique identifier"
                                  },
                                  "yrn": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "YRN attribute",
                                      "type": "string",
                                      "format": "uri",
                                      "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                  },
                                  "code": {
                                      "type": [
                                          "string"
                                      ],
                                      "description": "Unique, mandatory user-defined identifier of a product",
                                      "minLength": 1,
                                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                                  },
                                  "name": {
                                      "description": "The name of the product.",
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "localized",
                                      "oneOf": [
                                          {
                                              "type": "string",
                                              "minLength": 1,
                                              "description": "value of property in default language"
                                          },
                                          {
                                              "type": "object",
                                              "description": "value of property in specific language",
                                              "additionalProperties": {
                                                  "type": "string",
                                                  "minLength": 1
                                              }
                                          }
                                      ]
                                  },
                                  "description": {
                                      "description": "The description of the product.",
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "localized",
                                      "oneOf": [
                                          {
                                              "type": "string",
                                              "description": "value of property in default language"
                                          },
                                          {
                                              "type": "object",
                                              "description": "value of property in specific language",
                                              "additionalProperties": {
                                                   "type": "string"
                                              }
                                          },
                                          {
                                              "type": "null"
                                          }
                                      ]
                                  },
                                  "published": {
                                      "type": "boolean",
                                      "default": false,
                                      "description": "This flag determines if product is live."
                                  },
                                  "media": {
                                      "type": "array",
                                      "items": {
                                          "type": "object",
                                          "description": "Media file metadata",
                                          "properties": {
                                              "id": {
                                                  "type": "string"
                                              },
                                              "yrn": {
                                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                                  "title": "YRN attribute",
                                                  "type": "string",
                                                  "format": "uri",
                                                  "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                              },
                                              "mediaId": {
                                                  "type": "string"
                                              },
                                              "url": {
                                                  "type": "string",
                                                  "format": "uri",
                                                  "description": "URL of file content"
                                              },
                                              "tags": {
                                                  "type": "array",
                                                  "items": {
   
                                                   "type": "string"
                                                  },
                                                  "description": "Media file tags"
                                              },
                                              "contentType": {
                                                  "type": "string",
                                                  "description": "MIME type of the media file"
                                              },
                                              "stored": {
                                                  "type": "boolean",
                                                  "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                                              },
                                              "createdAt": {
                                                  "type": "string",
                                                  "description": "Date of media metadata creation."
                                              },
                                              "commitLink": {
                                                  "type": "string",
                                                  "description": "Contains link which is used when user triggers media commit operation. This link is not returned to user as product service internally triggers the commit"
                                              },
                                              "uploadLink": {
                                                  "type": "string",
                                                  "description": "Contains link on which user should send media for upload before he triggers the commit operation"
                                              },
                                              "uncommittedMedia": {
                                                  "type": "boolean",
                                                  "description": "If true, the media file is not committed yet. Not committed media does no have url property provided"
                                              }
                                          },
                                          "additionalProperties": false
                                      },
                                      "description": "Contains media information (including url). This attribute is Read-Only, to manage media collection please use the /media subresource. To get this attribute included in product please add the expand=media query param. By default this attribute is not returned with product."
                                  },
                                  "mixins": {
                                      "type": "object"
                                  }
                              },
                              "additionalProperties": false,
                              "required": [
                                  "id",
                                  "yrn"
                              ]
                          }
                      ]
                  }
              }
            example: |
              [
                  {
                      "id": "4474e3dfaee4c10def3d9b24",
                      "yrn": "urn:yaas:hybris:product:product:myshop;54cc453dfaee4c10def3db24",
                      "name": "Product1",
                      "description": "desc"
                  },
                  {
                      "productId": "5710b72dd2ef7d001d099fbf",
                      "id": "57ad7bfae12690001d568a3f",
                      "yrn": "urn:yaas:hybris:product:product-variant:myshop;5710b72dd2ef7d001d099fbf;57ad7bfae12690001d568a3f",
                      "code": "code",
                      "options": {
                          "option": "value"
                      },
                      "product": {
                          "id": "5710b72dd2ef7d001d099fbf",
                          "yrn": "urn:yaas:hybris:product:product:myshop;5710b72dd2ef7d001d099fbf",
                          "name": "Product2",
                          "description": "desc2"
                      }
                  }
              ]
      400:
        description: |
          Request syntactically incorrect. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                  "status": 400,
                  "message": "There are validation problems, see details section for more information",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "validation_violation",
                  "details": [
                      {
                          "field": "Accept-Language",
                          "message": "not a language",
                          "type": "invalid_header"
                      }
                  ]
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      401:
        description: |
          Given request is unauthorized. Bad or expired token. Reauthenticate
          the user. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                  "status": 401,
                  "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type": "insufficient_credentials",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      403:
        description: |
          Evaluated request scopes in access token are not sufficient and do not match required scopes.

        body:
          application/json:
            example: |
              {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      500:
        description: |
          Some server-side error occurred. Any details will be provided within the response payload.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      503:
        description: |
          Service temporarily unavailable.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }